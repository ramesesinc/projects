/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.rameses.etracs.common;

import com.rameses.rcp.common.CallbackHandler;
import com.rameses.rcp.framework.Binding;
import com.rameses.rcp.framework.UIEvent;
import com.rameses.rcp.framework.UIHandler;
import com.rameses.rcp.ui.UIControlAdapter;
import java.util.HashMap;

/**
 *
 * @author dell
 */
public class NonLocalAddressPanel extends javax.swing.JPanel {

    public NonLocalAddressPanel() {
        initComponents(); 
        register( "entity" );
    }
    
    public void setName(String name) {
        super.setName(name);
        
        txtUnitno.setName(name+".unitno");
        txtBldgno.setName(name+".bldgno");
        txtBldgname.setName(name+".bldgname");
        txtStreet.setName(name+".street");
        txtSubdivision.setName(name+".subdivision");
        lupBarangay.setName(name+".barangay");
        lupBarangay.setExpression("#{"+name+".barangay.name}");
        txtPin.setName( name + ".pin");
        cboType.setName(name + ".addresstype"); 
        txtmuni.setName(name + ".municipality");
        txtcity.setName(name + ".city");
        txtprov.setName(name + ".province"); 
        
        String[] depends = new String[]{ name+".addresstype"}; 
        pnlwhich.setDepends( depends );
        register( name ); 
    }

    private void register( String name ) {
        ControlHandlerImpl uihandler = new ControlHandlerImpl( name ); 
        txtUnitno.putClientProperty(UIHandler.class, uihandler);
    }
    
    private class ControlHandlerImpl extends UIControlAdapter implements CallbackHandler {

        String name; 
        UIEvent uie; 
        
        ControlHandlerImpl( String name ) { 
            this.name = (name == null? "entity" : name); 
        }

        public void bind( UIEvent uie ) { 
            this.uie = uie; 
            if ( uie != null ) { 
                Object o = uie.getValue( name ); 
                if ( o == null ) { 
                    uie.setValue( name, new HashMap()); 
                } 
                
                Binding binding = uie.getBinding(); 
                if ( binding != null ) { 
                    binding.getValueChangeSupport().add( name+".*", this ); 
                } 
            } 
        } 

        public void unbind(UIEvent e) {
            this.uie = null; 
        }

        public void refresh( UIEvent e ) { 
            if ( uie != null ) {
                call( "" );
            }
        }

        
        // 
        // CallbackHandler implementations 
        // 
        public Object call(Object arg) { 
            if ( uie != null ) {
                StringBuilder buffer = new StringBuilder(); 
                append( buffer, " ", "unitno" );
                append( buffer, " ", "bldgno" );
                append( buffer, " ", "bldgname" );
                append( buffer, ", ", "street" );
                append( buffer, ", ", "subdivision" ); 
                append( buffer, ", ", "barangay.name" ); 
                String addrtype = uie.getValue( name+".addresstype" )+""; 
                if ( "CITY".equalsIgnoreCase( addrtype )) {
                    append( buffer, ", ", "city" ); 
                } else if ( "MUNICIPALITY".equalsIgnoreCase( addrtype )) {
                    append( buffer, ", ", "municipality" ); 
                }
                append( buffer, ", ", "province" ); 
                
                if ( buffer.length() > 0 ) {
                    uie.setValue( name+".text", buffer.toString() ); 
                } else { 
                    uie.setValue( name+".text", null ); 
                } 
            } 
            return null; 
        }
        
        public Object call() { 
            return null; 
        }
        public Object call(Object[] args) {
            return null; 
        } 
        
        private void append( StringBuilder buffer, String delimiter, String property ) { 
            Object o = uie.getValue( name +"."+ property ); 
            if ( o == null ) { return; }  
            
            if ( buffer.length() > 0 ) {
                buffer.append((delimiter==null ? "" : delimiter)); 
            }             
            buffer.append( o.toString() ); 
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        xFormPanel1 = new com.rameses.rcp.control.XFormPanel();
        xFormPanel2 = new com.rameses.rcp.control.XFormPanel();
        txtUnitno = new com.rameses.rcp.control.XTextField();
        txtBldgno = new com.rameses.rcp.control.XTextField();
        txtBldgname = new com.rameses.rcp.control.XTextField();
        txtStreet = new com.rameses.rcp.control.XTextField();
        xFormPanel3 = new com.rameses.rcp.control.XFormPanel();
        txtSubdivision = new com.rameses.rcp.control.XTextField();
        lupBarangay = new com.rameses.rcp.control.XLookupField();
        xFormPanel4 = new com.rameses.rcp.control.XFormPanel();
        cboType = new com.rameses.rcp.control.XComboBox();
        pnlwhich = new com.rameses.rcp.control.XPanel();
        txtmuni = new com.rameses.rcp.control.XTextField();
        txtcity = new com.rameses.rcp.control.XTextField();
        txtprov = new com.rameses.rcp.control.XTextField();
        txtPin = new com.rameses.rcp.control.XTextField();

        setOpaque(false);
        setLayout(new java.awt.BorderLayout());

        xFormPanel1.setCaptionVAlignment(com.rameses.rcp.constant.UIConstants.CENTER);
        xFormPanel1.setCaptionWidth(100);
        xFormPanel1.setName("entity"); // NOI18N

        xFormPanel2.setCaptionVAlignment(com.rameses.rcp.constant.UIConstants.CENTER);
        xFormPanel2.setOrientation(com.rameses.rcp.constant.UIConstants.HORIZONTAL);
        xFormPanel2.setPadding(new java.awt.Insets(0, 0, 0, 0));
        xFormPanel2.setShowCaption(false);
        xFormPanel2.setStretchWidth(100);

        txtUnitno.setCaption("Unit No ");
        txtUnitno.setCaptionWidth(100);
        txtUnitno.setName("entity.unitno"); // NOI18N
        txtUnitno.setStretchWidth(100);
        xFormPanel2.add(txtUnitno);

        txtBldgno.setCaption("House / Bldg No");
        txtBldgno.setCaptionWidth(90);
        txtBldgno.setCellPadding(new java.awt.Insets(0, 5, 0, 0));
        txtBldgno.setName("entity.bldgno"); // NOI18N
        txtBldgno.setStretchWidth(100);
        xFormPanel2.add(txtBldgno);

        xFormPanel1.add(xFormPanel2);

        txtBldgname.setCaption("Bldg Name");
        txtBldgname.setName("entity.bldgname"); // NOI18N
        txtBldgname.setStretchWidth(100);
        xFormPanel1.add(txtBldgname);

        txtStreet.setCaption("Street");
        txtStreet.setName("entity.street"); // NOI18N
        txtStreet.setStretchWidth(100);
        xFormPanel1.add(txtStreet);

        xFormPanel3.setOrientation(com.rameses.rcp.constant.UIConstants.HORIZONTAL);
        xFormPanel3.setPadding(new java.awt.Insets(0, 0, 0, 0));
        xFormPanel3.setShowCaption(false);
        xFormPanel3.setStretchWidth(100);

        txtSubdivision.setCaption("Subdivision");
        txtSubdivision.setCaptionWidth(100);
        txtSubdivision.setName("entity.subdivision"); // NOI18N
        txtSubdivision.setStretchWidth(100);
        xFormPanel3.add(txtSubdivision);

        lupBarangay.setCaption("Barangay");
        lupBarangay.setCaptionWidth(90);
        lupBarangay.setCellPadding(new java.awt.Insets(0, 5, 0, 0));
        lupBarangay.setExpression("#{entity.barangay.name}");
        lupBarangay.setHandler("barangay:lookup");
        lupBarangay.setName("entity.barangay"); // NOI18N
        lupBarangay.setStretchWidth(100);
        xFormPanel3.add(lupBarangay);

        xFormPanel1.add(xFormPanel3);

        xFormPanel4.setCaptionVAlignment(com.rameses.rcp.constant.UIConstants.CENTER);
        xFormPanel4.setOrientation(com.rameses.rcp.constant.UIConstants.HORIZONTAL);
        xFormPanel4.setPadding(new java.awt.Insets(0, 0, 0, 0));
        xFormPanel4.setShowCaption(false);
        xFormPanel4.setStretchWidth(100);

        cboType.setAllowNull(false);
        cboType.setCaption("Address Type");
        cboType.setCaptionWidth(120);
        cboType.setItemsObject(new String[]{"MUNICIPALITY", "CITY"});
        cboType.setName("entity.addresstype"); // NOI18N
        cboType.setPreferredSize(new java.awt.Dimension(100, 20));
        cboType.setShowCaption(false);
        xFormPanel4.add(cboType);

        pnlwhich.setDepends(new String[] {"entity.addresstype"});
        pnlwhich.setName("entity.addresstype"); // NOI18N
        pnlwhich.setShowCaption(false);
        pnlwhich.setStretchWidth(100);
        pnlwhich.setLayout(new java.awt.CardLayout());

        txtmuni.setCaption("Municipality");
        txtmuni.setCaptionWidth(120);
        txtmuni.setName("entity.municipality"); // NOI18N
        txtmuni.setRequired(true);
        txtmuni.setStretchWidth(100);
        pnlwhich.add(txtmuni, "MUNICIPALITY");

        txtcity.setCaption("City");
        txtcity.setCaptionWidth(120);
        txtcity.setName("entity.city"); // NOI18N
        txtcity.setPreferredSize(new java.awt.Dimension(0, 22));
        txtcity.setRequired(true);
        pnlwhich.add(txtcity, "CITY");

        xFormPanel4.add(pnlwhich);

        txtprov.setCaption("Province");
        txtprov.setCaptionWidth(90);
        txtprov.setCellPadding(new java.awt.Insets(0, 5, 0, 0));
        txtprov.setName("entity.province"); // NOI18N
        txtprov.setRequired(true);
        txtprov.setStretchWidth(100);
        xFormPanel4.add(txtprov);

        xFormPanel1.add(xFormPanel4);

        txtPin.setCaption("PIN");
        txtPin.setName("entity.pin"); // NOI18N
        txtPin.setStretchWidth(50);
        xFormPanel1.add(txtPin);

        add(xFormPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.rameses.rcp.control.XComboBox cboType;
    private com.rameses.rcp.control.XLookupField lupBarangay;
    private com.rameses.rcp.control.XPanel pnlwhich;
    private com.rameses.rcp.control.XTextField txtBldgname;
    private com.rameses.rcp.control.XTextField txtBldgno;
    private com.rameses.rcp.control.XTextField txtPin;
    private com.rameses.rcp.control.XTextField txtStreet;
    private com.rameses.rcp.control.XTextField txtSubdivision;
    private com.rameses.rcp.control.XTextField txtUnitno;
    private com.rameses.rcp.control.XTextField txtcity;
    private com.rameses.rcp.control.XTextField txtmuni;
    private com.rameses.rcp.control.XTextField txtprov;
    private com.rameses.rcp.control.XFormPanel xFormPanel1;
    private com.rameses.rcp.control.XFormPanel xFormPanel2;
    private com.rameses.rcp.control.XFormPanel xFormPanel3;
    private com.rameses.rcp.control.XFormPanel xFormPanel4;
    // End of variables declaration//GEN-END:variables
}
