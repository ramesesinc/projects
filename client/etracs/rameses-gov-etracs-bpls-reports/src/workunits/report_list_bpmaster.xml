<workunit extends="wtemplates/ReportController.xml" >
    <invokers>
        <invoker folderid="/explorer/report/bpls" action="init" role="REPORT" 
            caption="Taxpayer Listing" target="window"/>
        
    </invokers>
    
    <code>
    <![CDATA[
import com.rameses.rcp.common.*;
import com.rameses.rcp.annotations.*;
import com.rameses.osiris2.common.*;
import com.rameses.osiris2.client.*;
import com.rameses.osiris2.reports.*;

public class BPMasterListReportController extends ReportController { 

    @Service('BPMasterListReportService')
    def svc; 

    @Service('BusinessPermitTypeService')
    def permitTypeSvc;     

    String title = "Business Taxpayer Masterlist";
    String reportpath = 'com/rameses/gov/etracs/bpls/reports/'
    String reportName = reportpath + 'BPMasterList.jasper'

    def rptparams = [:];
    
    def formControl = [ 
        getControlList: { 
            return [
                [type:'combo', caption:'Permit Type', name:'entity.permittype', required:true, items:'permitTypes',  expression:'#{item.title}', captionWidth:100, preferredSize:'0,20'],
                [type:'integer', caption:'App Year', name:'entity.year', required:true, preferredSize:'100,20', captionWidth:100], 

                [type:'checkbox', caption:'App Type', text:'NEW', name:'entity.type_new', immediate:true, preferredSize:'0,20', captionWidth:100 ],
                [type:'checkbox', caption:'',         text:'RENEW', name:'entity.type_renew',immediate:true, preferredSize:'0,20', captionWidth:100 ],
                [type:'checkbox', caption:'',         text:'RETIRE', name:'entity.type_retire', immediate:true, preferredSize:'0,20', captionWidth:100 ],
                [type:'checkbox', caption:'',         text:'ADDITIONAL', name:'entity.type_additional', immediate:true, preferredSize:'0,20', captionWidth:100 ],
                [type:'checkbox', caption:'',         text:'RETIRE-LOB', name:'entity.type_retirelob', immediate:true, preferredSize:'0,20', captionWidth:100 ],
                
                [type:'checkbox', caption:'App Status', text:'COMPLETED', name:'entity.state_completed', immediate:true, preferredSize:'0,20', captionWidth:100 ],
                [type:'checkbox', caption:'',           text:'FOR-RELEASE', name:'entity.state_release', immediate:true, preferredSize:'0,20', captionWidth:100 ] 
            ]; 
        } 
    ] as FormPanelModel; 

    def permitTypes = []; 

    def initReport() { 
        def outcome = super.initReport(); 
        permitTypes = permitTypeSvc.getList(); 
        entity.permittype = (permitTypes? permitTypes[0] : null); 
        entity.year = new java.sql.Date( System.currentTimeMillis() ).toString().split("-")[0]; 
        entity.type_new = entity.type_renew = entity.type_additional = true; 
        entity.state_completed = true; 
        return outcome; 
    } 

    Map getParameters() { 
        def apptypes = []; 
        if ( entity.type_new ) apptypes << 'NEW'; 
        if ( entity.type_renew ) apptypes << 'RENEW'; 
        if ( entity.type_retire ) apptypes << 'RETIRE'; 
        if ( entity.type_additional ) apptypes << 'ADDITIONAL'; 
        if ( entity.type_retirelob ) apptypes << 'RETIRELOB'; 
        if ( apptypes ) {
            rptparams.APPTYPE = apptypes.join(', '); 
        } else {
            rptparams.APPTYPE = '(NONE)';
        } 
        
        def appstates = [];
        if ( entity.state_release ) appstates << 'RELEASE'; 
        if ( entity.state_completed ) appstates << 'COMPLETED'; 
        if ( appstates ) {
            rptparams.APPSTATE = appstates.join(', '); 
        } else {
            rptparams.APPSTATE = '(NONE)';
        } 

        rptparams.YEAR = entity.year; 
        return rptparams; 
    }

    def getReportData() { 
        def resp = svc.getReport( entity ); 
        if ( resp == null ) resp=[];         
        resp.eachWithIndex{ v,i-> v.sortindex=i } 
        
        def map = resp.groupBy{ it.objid }
        resp.clear(); 
        
        def reportdata = []; 
        map.each{ k,v-> 
            def o = v.first(); 
            o.apptype = v.collect{ it.apptype }.findAll{( it )}.unique().join(', '); 
            reportdata << o; 
            v.clear(); 
        } 
        map.clear(); 
        reportdata.sort{ it.sortindex } 
        return reportdata; 
    }
}
    ]]>
    </code>
</workunit>