<workunit>
    <invokers>
        <invoker folderid="/home/business/business_application" caption="Renewal"  action="start" target="window" role="BUSINESSINFO" index="51"/>
        
        <invoker type="lobActions" caption="Add" action="lob.add"  immediate="true"/>
        <invoker type="lobActions" caption="Remove" action="lob.remove"  immediate="true" visibleWhen="#{lob.selectedItem!=null &amp;&amp; lob.selectedItem.assessmenttype=='NEW'}"/>
        <!--
        <invoker type="lobActions" caption="Reclassify" action="lob.reclassify"  immediate="true" visibleWhen="#{lob.selectedItem!=null &amp;&amp; lob.selectedItem.assessmenttype=='RENEW' }"/>
        -->
        <invoker type="lobActions" caption="Retire" action="lob.retire" immediate="true" visibleWhen="#{lob.selectedItem!=null  &amp;&amp; lob.selectedItem.assessmenttype=='RENEW' }"/>
        <invoker type="lobActions" caption="Unretire" action="lob.unretire" immediate="true" visibleWhen="#{lob.selectedItem!=null &amp;&amp; lob.selectedItem.assessmenttype=='RETIRE'}"/>

        <invoker type="extActions" caption="Print"  icon="images/toolbars/printer.png" 
            action="application.print" visibleWhen="#{state=='save-success'}"/>
    </invokers>
    
    <code>
         <![CDATA[    
        import com.rameses.rcp.annotations.*
        import com.rameses.rcp.common.*
        import com.rameses.osiris2.client.*
        import com.rameses.osiris2.common.*
        import java.rmi.server.*;
        import com.rameses.util.*;
        import com.rameses.gov.etracs.bpls.controller.*;
        
        public class RenewBusinessApplication extends PageFlowController {
        
            @Service("EntityService")
            def entitySvc;
            
            @Script("BusinessSearchUtil")
            def searchList;
        
            @Script("BusinessAddressUtil")
            def address;
        
            @Script("BusinessApplicationUtil")
            def application;
            
            @Script("BusinessRequirementUtil")
            def requirement;
            
            @Script("BusinessLobUtil")
            def lob;

            @Script("BusinessInfoUtil")
            def appinfo;

            @Script("BusinessContactUtil")
            def contact;
            
            @Service("BusinessMasterService")
            def businessMasterSvc;
            
            def entity;
            
            def message = "Please review the current business information. Apply the necessary updates.";
            
            void loadBusiness( def businessid ) {
                try {
                    application.init( [businessid:businessid, apptype: 'RENEW'] );
                    lob.reset(); 
                    requirement.reset(); 
                } catch(Warning w) {
                    Modal.show( 'business_redflag:warning', [list: w.info.list] );
                    throw new BreakException();
                } catch(e) {
                    throw e;
                }
            }
            
            void open() {
                loadBusiness( searchList.selectedItem.objid );
            }
            
            void verifyOwnerAddress() {
                if( !entity.business.owner.address.objid )
                    throw new Exception("Owner address is not specified. Please update address");
            }
            
            void reloadAddress() {
                if(!entity.business.owner.objid) 
                    throw new Exception("Please select first an owner");
                def owner = entitySvc.open([objid:entity.business.owner.objid]);
                entity.business.owner = owner;
            }
            
            void updateInfo() {
                def test = false;
                appinfo.handler = {
                    test = true;
                }

                def renewapp = entity.lobs.find{ it.assessmenttype.toString().toUpperCase()=='RENEW' }
                def retireapp = entity.lobs.find{ it.assessmenttype.toString().toUpperCase()=='RETIRE' }
                def newapp = entity.lobs.find{ it.assessmenttype.toString().toUpperCase()=='NEW' }
                if ( retireapp?.objid && !renewapp?.objid && !newapp?.objid ) { 
                    throw new Exception('Please use the Retire Application facility if all lines of business were marked as RETIRE'); 
                } 

                requirement.fetch(); 

                Modal.show( appinfo.update());
                if(!test) throw new BreakException();
                appinfo.verify();
            }
            
            def getLobAssessmentTypes() {
                return lob.assessmentTypes; 
            } 
            
            void searchBarcode() {
                def code = MsgBox.prompt("Enter barcode");
                if(!code) throw new BreakException();
                def bin = code.substring( code.indexOf(":")+1 ); 
                def b = businessMasterSvc.findByBIN([bin: bin]);
                if(!b) throw new Exception("Business does not exist");
                loadBusiness( b.objid );
            }

            void save() { 
                requirement.verify();
                application.save(); 
            } 
        }
        ]]>
    </code>    
    
    <pageflow>
        
        <start>
            <transition to="search" name="create" />
        </start>
        
        <page name="search" title="Search Business Name (For Renewal)">
            <transition to="edit-owner-address" caption="Next" name="next" mnemonic="N" immediate="false" action="open"/>
            <transition to="edit-owner-address" caption="Search Barcode" mnemonic="B" immediate="false" action="searchBarcode"/>
        </page>
        
        <page name="edit-owner-address" title="Update Owner Address">
            <transition to="search" caption="Back" mnemonic="B" name="back"/>
            <transition to="edit-business-address" caption="Next" name="next" mnemonic="N" immediate="false" action="verifyOwnerAddress"/>
        </page>
        
        <page name="edit-business-address" title="Update Business Address">
            <transition to="edit-owner-address" caption="Back" mnemonic="B" name="back"/>
            <transition to="edit-contact" caption="Next" name="next" mnemonic="N" immediate="false" action="address.verify"/>
        </page>
        
        <page name="edit-contact" title="Edit Contact">
            <transition to="edit-business-address" caption="Back" mnemonic="B" name="back"/>
            <transition to="edit-lob" caption="Next" name="next" mnemonic="N" immediate="false" action="contact.verify"/>
        </page>

        <page name="edit-lob" title="Edit Line of Business">
            <transition to="edit-contact" caption="Back" mnemonic="B" name="back"/>
            <transition to="confirm" caption="Next" mnemonic="N" name="next" action="updateInfo"/>
        </page>

        <page name="confirm" title="Confirm (For Renewal)">
            <transition to="edit-lob" caption="Back" mnemonic="B" name="back"/>
            <transition to="save-success" caption="Submit" mnemonic="S" name="save" action="save"
            confirm="You are about to save this transaction. Continue?"/>
        </page>
        
        <page name="save-success" title="Save Success">
            <transition to="search" caption="Add Another" mnemonic="A" />
        </page>

        <end/>
    </pageflow>
    
    <pages>
        <page name="search" template="com.rameses.gov.etracs.bpls.view.SearchBusinessPage"/>
        <page name="edit-owner-address" template="com.rameses.gov.etracs.bpls.view.EditOwnerAddressPage"/>
        <page name="edit-business-address" template="com.rameses.gov.etracs.bpls.view.EditBusinessAddressPage"/>
        <page name="edit-contact" template="com.rameses.gov.etracs.bpls.view.EditBusinessContactPage"/>
        <page name="edit-lob" template="com.rameses.gov.etracs.bpls.view.EditLobPage"/>
        <page name="confirm" template="com.rameses.gov.etracs.bpls.view.ConfirmPage"/>
        <page name="save-success" template="com.rameses.gov.etracs.bpls.view.SuccessPage"/>
    </pages>
    
</workunit>