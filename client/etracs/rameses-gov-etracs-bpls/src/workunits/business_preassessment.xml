<workunit>
    <invokers>
         <invoker folderid="/home/business" caption="Pre Assessment" 
            target="window" role="ASSESSOR"
            icon="home/icons/business-pre-assessment.png" />

         <invoker type="formActions" caption="Assess" action="calculate" />
         <invoker type="formActions" caption="Print Assessment" action="print" icon="print"/>
         <invoker type="formActions" caption="Assess2" action="calculate2" />
    </invokers>
    
    <code>
        <![CDATA[    
        import com.rameses.rcp.annotations.*
        import com.rameses.rcp.common.*
        import com.rameses.osiris2.client.*
        import com.rameses.osiris2.common.*
        import com.rameses.common.*;
        import java.rmi.server.*
        import com.rameses.util.*;
        
        class PreAssessmentController {
        
            @Binding 
            def binding;
            
            @Script("BusinessAssessmentInfoUtil")
            def assessmentInfo;
            
            @Script("BusinessInfoUtil")
            def appinfo;
            
            def addressTypes = ["local", "nonlocal", "rented", "government"];
             
            String title = "Preassessment";
            
            @FormTitle
            def ftitle = "Business Pre-assessment";
            
            def entity = [lobs:[], business:[address:[:]], taxfees:[], option:'APPLICANT_INFO'];
            def  mode = "init";
            
            def infoModel = [
                fetchList: { o->
                    return entity.infos;
                }
            ] as BasicListModel;
            
            def taxfeeModel = [
                fetchList: { o->
                    return entity.taxfees;
                }
            ] as BasicListModel;
            
            void calculate() {
                if(!entity.lobs) throw new Exception("please specify at least one line");
                Modal.show(appinfo.update());
                appinfo.verify();
                Modal.show(assessmentInfo.calculate());
                if ( entity.taxfees ) {
                    assessmentInfo.runBill(entity.billdate); 
                    entity.taxfees.each{ 
                        if (it.taxfeetype=='TAX') { 
                            it.sortindex=0; 
                        } else if (it.taxfeetype=='REGFEE') { 
                            it.sortindex = (it.lob?.objid? 1: 2); 
                        } else if (it.taxfeetype=='OTHERCHARGE') { 
                            it.sortindex = (it.lob?.objid? 3: 4); 
                        } else { 
                            it.sortindex = 5; 
                        } 
                    }
                    entity.taxfees.sort{ it.sortindex } 
                    infoModel.reload();
                    taxfeeModel.reload();                    
                } 
                mode = "assess";
                binding.refresh(); 
            } 
            
            def print() { 
                return Inv.lookupOpener("business:preassessment:printout", [entity: entity] );            
            }
            
            
            
            def calculate2() {
                def p = [:];
                p.putAll( entity );
                p.orgtype = entity.business.orgtype;
                def h = { o->
                    o.taxfees.each{ 
                        if (it.taxfeetype=='TAX') { 
                            it.sortindex=0; 
                        } else if (it.taxfeetype=='REGFEE') { 
                            it.sortindex = (it.lob?.objid? 1: 2); 
                        } else if (it.taxfeetype=='OTHERCHARGE') { 
                            it.sortindex = (it.lob?.objid? 3: 4); 
                        } else { 
                            it.sortindex = 5; 
                        } 
                    }
                    entity.infos = o.infos;
                    entity.taxfees = o.taxfees.sort{ it.sortindex };
                    infoModel.reload();
                    taxfeeModel.reload();
                    binding.refresh();
                }   
                return Inv.lookupOpener("rule:askinfo", [params:p, handler: h]);
            }
            
        }
    ]]>
    </code>
    
    <pages>
        <page template="com.rameses.gov.etracs.bpls.view.PreAssessmentPage"/>
    </pages>
        
</workunit>