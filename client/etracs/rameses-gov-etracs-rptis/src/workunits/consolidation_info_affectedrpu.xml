<?xml version="1.0" encoding="UTF-8"?>
<workunit>
    <invokers>
        <invoker type="consolidation:info" action="init" caption="Affected Improvements" index="25"/>
        <invoker type="formActions" action="edit" caption="Edit" mnemonic="e" visibleWhen="#{showActions == true}" depends="selectedItem" role="TAXMAPPER"/>
        <invoker type="formActions" action="save" caption="Save" mnemonic="s" visibleWhen="#{mode != 'read'}" depends="selectedItem" role="TAXMAPPER"/>
   </invokers>
   <code>
 

<![CDATA[       

import com.rameses.rcp.annotations.* 
import com.rameses.rcp.common.* 
import com.rameses.osiris2.client.*
import com.rameses.osiris2.common.*
import com.rameses.gov.etracs.rptis.util.RPTUtil;

class ConsolidationAffectedRpuController
{
    @Binding
    def binding;
    
        
    @Caller
    def caller;
    
    @Service('FAASService')
    def faasSvc;
    
    //String title = 'Affected RPUs Information';
    
    def svc;
    
    def entity;
    def selectedItem;
    def affectedrpus;
    def mode;
    
    def MODE_READ = 'read';
    def MODE_EDIT = 'edit';
    
    void init(){
        affectedrpus = svc.getAffectedRpus(entity.objid)
        mode = MODE_READ;
    }
    
    def getOpener(){
        if (selectedItem && selectedItem.newfaasid) {
            return InvokerUtil.lookupOpener('faasdata:open',[
                    entity      : [objid:selectedItem.newfaasid], 
                    svc         : faasSvc, 
                    taskstate   : entity.taskstate, 
                    assignee    : entity.assignee,
            ]);
        }
        return null;
    }        
    
    
    void edit(){
        caller.addMessage([type:'affectedrpu', msg:'Affected RPU is still in editing mode.']);
        mode = MODE_EDIT;
    }
    
    void save(){
        caller.clearMessages('affectedrpu');
        mode = MODE_READ;
    }
    
    void refresh(){
        affectedrpus = svc.getAffectedRpus(entity.objid)
        affectedrpuListHandler.load();
    }
    
    def listHandler = [
        getRows : { return affectedrpus.size() + 1 },
            
        fetchList : { return affectedrpus },
        
        validate : { li -> 
            def arpu = li.item;
            RPTUtil.required('New Suffix', arpu.newsuffix)
            arpu.putAll(svc.saveAffectedRpuAndFaas(arpu));
        }
        
    ] as EditorListModel 
            

    def getCount(){
        if (affectedrpus)
            return affectedrpus.size();
        return 0;
    }
    
        
    boolean getShowActions(){
        if (entity.taskstate && entity.taskstate.matches('assign.*')) return false;
        if (OsirisContext.env.USERID != entity.assignee.objid) return false;
        if (entity.state.matches('APPROVED')) return false;
        if (mode != MODE_READ) return false;
        return true;
    }
    
    boolean getAllowEdit(){
        return mode != MODE_READ
    }
    
}

]]>

   </code>
    
    <pages> 
        <page template="com.rameses.gov.etracs.rpt.consolidation.ui.ConsolidationInfoAffectedRpuPage"/>
    </pages>
</workunit>


