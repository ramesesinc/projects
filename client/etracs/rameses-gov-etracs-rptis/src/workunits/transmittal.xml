<?xml version="1.0" encoding="UTF-8"?>
<workunit>
    <invokers>
        <invoker type="rpttransmittal:create" action="init" caption="Transmittal (New)" 
            target="window"  
            role="RECORD" />
        
        <invoker type="rpttransmittal:open" action="open" caption="Transmittal" target="window"  />
            
        <invoker folderid="/explorer/txn/rpt/online" action="init"  caption="Transmittal" index="31" 
            role="RECORD" />
        
        <invoker folderid="/home/rpt/txn" action="init"  caption="Transmittal" index="31" 
            role="RECORD" />
        
   </invokers>
   <code>       
<![CDATA[

import com.rameses.rcp.annotations.* 
import com.rameses.rcp.common.* 
import com.rameses.osiris2.client.*
import com.rameses.osiris2.common.*
import com.rameses.util.MapBeanUtils;

public class TransmittalController extends PageFlowController
{
    @Binding
    def binding;
    
    @Service('RPTTransmittalService')
    def svc 
    
    @Service('LGUService')
    def lguSvc;
            
    @Invoker
    def invoker 
    
    def MODE_CREATE = 'create';
    def MODE_EDIT   = 'edit';
    def MODE_READ   = 'read';
    
    def STATE_DRAFT         = 'DRAFT';
    def STATE_SUBMITTED     = 'SUBMITTED';
    def STATE_FORAPPROVAL   = 'FORAPPROVAL';
    def STATE_APPROVED      = 'APPROVED';
    
    def mode;
    def entity;
    
    String entityName = 'rpttransmittal';
    
    def tabHandler = [
        getOpeners : {
            return InvokerUtil.lookupOpeners('rpttransmittal:item', [
                    entity      : entity, 
                    svc         : svc,
            ]);
        }
    ] as TabbedPaneModel;

        
    def init(){
        entity = [
            objid  : 'T' + new java.rmi.server.UID(),
            state  : STATE_DRAFT,
        ];
        mode = MODE_CREATE;
        return super.signal('init');
    }
    
    def open(){
        entity = svc.open(entity);
        mode = MODE_READ;
        return super.signal('open');
    }
    
    
    void createTransmittal(){
        entity.tolgu?.type = entity.tolgu?.lgutype
        entity.putAll(svc.create(entity));
        mode = MODE_READ;
    }
    
    
    def oldEntity;
    
    void edit(){
        oldEntity = MapBeanUtils.copy(entity)
        mode = MODE_EDIT;
    }
    
    void cancelEdit(){
        if (oldEntity){
            entity.putAll(oldEntity)
            oldEntity = null
        }
        else{
            open();
        }
        mode = MODE_READ;
    }
    
    void save(){
        entity.putAll(svc.update(entity));
        mode = MODE_READ;
    }
    
    void delete(){
        svc.delete(entity);
    }
    
    void submit(){
        entity.putAll(svc.submit(entity));
    }
    
    void submitForApproval(){
        entity.putAll(svc.submitForApproval(entity));
    }
    
    void disapprove(){
        entity.putAll(svc.disapprove(entity));
    }
    
    void approve(){
        entity.putAll(svc.approve(entity));
    }
    
    def getHasImportedApproval(){
        return entity.hasimportedapproval
    }
    
    
    List getTransmittalTypes(){
        return svc.getTransmittalTypes();
    }
    
    List getLgus(){
        def lgus = [];
        if (OsirisContext.env.ORGCLASS.equalsIgnoreCase('PROVINCE')){
            lgus = lguSvc.lookupMunicipalities([:]);
            def muni = lgus.find{it.objid == OsirisContext.env.ORGID};
            if (muni)
                lgus.remove(muni);
        }
        else{
            lgus = lguSvc.lookupProvinces([:]);
        }
        
        return lgus;
        
    }
    
    boolean getShowExport(){
        if (entity.state == 'SUBMITTED' && entity.lgu.objid == OsirisContext.env.ORGID)
            return true;
        if (entity.state == 'FORAPPROVAL' && entity.lgu.objid == OsirisContext.env.ORGID)
            return true;
        if (entity.state == 'APPROVED' && entity.tolgu.objid == OsirisContext.env.ORGID)
            return true;
        if (entity.state == 'DISAPPROVED' && entity.tolgu.objid == OsirisContext.env.ORGID)
            return true;
        return false;
    }
    
    boolean getShowForApprovalActions(){
        if (entity.state == 'FORAPPROVAL' && entity.tolgu.objid == OsirisContext.env.ORGID)
            return true;
        return false;
    }
    
    
}
       
]]>       
   </code>

    <pageflow>
        <start>
            <transition name="init" to="init"/>
            <transition name="open" to="open"/>
        </start>
        
        <page name="init" title="Transmittal: Initial Information">
            <transition caption="Cancel" to="end"  mnemonic="c" icon="images/toolbars/cancel.png"/>
            <transition caption="Next"  to="default" action="createTransmittal" mnemonic="n"  />
        </page>
        
        <process name="open">
            <transition to="default" cond="#{entity.state == 'DRAFT'}"/>
            <transition to="submitted" cond="#{entity.state == 'SUBMITTED'}"/>
            <transition to="forapproval" cond="#{entity.state == 'FORAPPROVAL'}"/>
            <transition to="approved" cond="#{entity.state == 'APPROVED'}"/>
        </process>
        
        <page name="default" title="Transmittal (Draft)">
            <transition caption="Close"  to="end"      mnemonic="c" icon="images/toolbars/cancel.png" visibleWhen="#{mode == 'read'}"/>
            <transition caption="Edit"   to="back-to-default" action="edit"  name="edit" mnemonic="e" shortcut="ctrl E" icon="images/toolbars/edit.png"  visibleWhen="#{mode == 'read'}" role="RECORD"/>
            <transition caption="Cancel" to="back-to-default" action="cancelEdit" name="cancel" mnemonic="c" icon="images/toolbars/cancel.png" visibleWhen="#{mode != 'read'}"/>
            <transition caption="Save"   to="back-to-default" action="save" name="save" mnemonic="s" shortcut="ctrl S" icon="images/toolbars/save.png"  visibleWhen="#{mode != 'read'}" />
            <transition caption="Delete" to="delete"  action="delete" confirm="Delete record?"    mnemonic="d" icon="images/toolbars/trash.png"  visibleWhen="#{mode == 'read'}" role="RECORD"/>
            <transition caption="Submit" to="submitted" action="submit" name="submit"  mnemonic="m"  visibleWhen="#{mode == 'read' &amp;&amp; entity.type == 'SYNC'}" confirm="Submit?" role="RECORD"/>
            <transition caption="Submit" to="forapproval" action="submitForApproval" name="submitForApproval"  mnemonic="m"  visibleWhen="#{mode == 'read' &amp;&amp; entity.type != 'SYNC'}" confirm="Submit for approval?" role="RECORD"/>
        </page>
        
        <process name="back-to-default">
            <transition to="default" />
        </process>
        
        <process name="delete">
            <transition to="end"/>
        </process>
        
        <page name="submitted" title="Transmittal (Submitted)">
            <transition caption="Close" to="end" mnemonic="c" icon="images/toolbars/cancel.png" />
        </page>
        
        <process name="back-to-submitted">
            <transition to="submitted" />
        </process>
        
        
        <page name="forapproval" title="Transmittal (For Approval)">
            <transition caption="Close" to="end" mnemonic="c" icon="images/toolbars/cancel.png" />
            <transition caption="Approve" to="approved" action="approve" mnemonic="v" confirm="Approve transmittal?" visibleWhen="#{showForApprovalActions}"/>
            <transition caption="Disapprove" to="disapproved" action="disapprove" mnemonic="v" confirm="Disapprove transmittal?" visibleWhen="#{showForApprovalActions}"/>
        </page>
        
        <page name="approved" title="Transmittal (Approved)">
            <transition caption="Close" to="end" mnemonic="c" icon="images/toolbars/cancel.png"/>
        </page>
        
        <page name="disapproved" title="Transmittal (Disapproved)">
            <transition caption="Close" to="end" mnemonic="c" icon="images/toolbars/cancel.png"/>
        </page>
        
        <end />
        
    </pageflow>
    
    <pages> 
        <page name="init" template="com.rameses.gov.etracs.rpt.transmittal.ui.TransmittalInitPage"/>
        <page name="default" template="com.rameses.gov.etracs.rpt.transmittal.ui.TransmittalPage"/>
        <page name="submitted" template="com.rameses.gov.etracs.rpt.transmittal.ui.TransmittalPage"/>
        <page name="forapproval" template="com.rameses.gov.etracs.rpt.transmittal.ui.TransmittalPage"/>
        <page name="approved" template="com.rameses.gov.etracs.rpt.transmittal.ui.TransmittalPage"/>
        <page name="disapproved" template="com.rameses.gov.etracs.rpt.transmittal.ui.TransmittalPage"/>
    </pages>
</workunit>


