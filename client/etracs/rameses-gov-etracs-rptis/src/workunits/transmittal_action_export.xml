<?xml version="1.0" encoding="UTF-8"?>
<workunit>
    <invokers>
        <invoker type="rpttransmittal:formActions" action="init" caption="Export" target="self"  
            visibleWhen="#{showExport}" index="10" role="RECORD" />
            
        <invoker type="formActions" action="_close" caption="Close" mnemonic="c" immediate="true" /> 
   </invokers>
   <code>       
<![CDATA[

import com.rameses.rcp.annotations.* 
import com.rameses.rcp.common.* 
import com.rameses.osiris2.client.*
import com.rameses.osiris2.common.*
import com.rameses.util.MapBeanUtils;
import com.rameses.gov.etracs.rpt.transmittal.ui.*;
import java.io.File;

public class TransmittalExportController
{
    @Binding
    def binding;
    
    @Service('RPTTransmittalService')
    def svc;
    
    @Service('RPTTransmittalExportService')
    def exportSvc;
    
    def entity;
    def file;
    def info;
    def processing = false;
    def task;
    def items;
    def type;
    
    String getTitle(){
        return 'Export Transmittal ' + entity.txnno;
    }
    
    void init(){
        initFile();
        items = svc.getItems(entity);
        type = 'export';
        processing = false;
    }
    
    void initFile(){
        def dir = System.getProperty('user.home');
        if (!dir.endsWith(File.separator))
            dir += File.separator
        def filename = dir + 'TRANSMITTAL-' + entity.txnno + (entity.state=='APPROVED' ? '-' + entity.state : '') + '.dat';
        file = new File(filename);
    }
   
    void export(){
        info = '';
        processing = true;
        task = new TransmittalExportTask();
        task.exportSvc   = exportSvc; 
        task.entity      = entity;
        task.file        = file;
        task.items       = items;
        task.oncomplete  = oncomplete;
        task.showinfo    = showinfo;
        task.onerror     = onerror;
        Thread t = new Thread(task);
        t.start();
    }
    
    def oncomplete = {
        processing = false;
        task = null;
        showinfo('\n\n\n' + it)
    }    
    
    def onerror = {
        processing = false;
        task = null;
        showinfo('\n\n\nERROR: ' + it)
    }
    
    def showinfo = { msg ->
        info += msg;
        binding.refresh('.*');
    }    
    
}
       
]]>       
   </code>
    
    <pages> 
        <page template="com.rameses.gov.etracs.rpt.transmittal.ui.TransmittalExportImportPage"/>
    </pages>
</workunit>


