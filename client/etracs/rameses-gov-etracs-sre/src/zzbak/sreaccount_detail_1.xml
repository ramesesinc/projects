<workunit>
        
    <invokers>
         <invoker type="sreaccount-detail:open" caption="SRE Account Detail" action="open"/>
         <invoker type="sreaccount-detail:create" caption="SRE Account Detail" action="create"/>
   </invokers>
   
   <code>
       <![CDATA[
        import com.rameses.osiris2.common.*;
        import com.rameses.rcp.common.*;
        import com.rameses.rcp.annotations.*;
        import com.rameses.osiris2.client.*; 
        import java.rmi.server.UID;
        
        class SREAccountDetailController extends CRUDController {
        
            String serviceName = "SREAccountService";
            String entityName = "sreaccount";
            String title = "SRE Account Detail";
            String prefixId = "SRE";
            def node;
            
            Map createEntity() {
                def m = [parentid:node.objid, type:'detail'];
                m.parent = [code:node.code, title: node.title];
                return m;
           }
            
           def transferParent() {
                return InvokerUtil.lookupOpener( "sreaccountgroup:lookup", [
                    onselect: { o->
                        if( MsgBox.confirm('You are about to transfer this account to another group. Continue?') ) {
                            service.changeParent( [parentid:o.objid, objid:entity.objid] );
                            entity.parentid = o.objid;
                            entity.parent = o;
                            binding.refresh();
                        }
                    }
                ]);
            }
            
            def subAccountModel = [
                fetchList: { o->
                    return service.getSubAccounts( entity );
                },
                onAddItem: { o->
                    o.objid = "SUBACCT" + new UID();
                    o.state = 'APPROVED';
                    o.type = "subaccount";
                    o.acctgroup = entity.acctgroup;
                    o.parentid = entity.objid;
                },
                onRemoveItem: { o->
                    if( MsgBox.confirm("Remove this item. Continue?")) {
                        service.removeEntity( o ); 
                        subAccountModel.reload();
                    }
                },
                onCommitItem: {o ->
                    service.saveSubAccount(o);
                }
            ] as EditorListModel;     
        }      
       ]]>
   </code>
   
   <pages>
       <page template="com.rameses.gov.treasury.accounts.SREAccountDetailPage"/>
   </pages>
   
</workunit>