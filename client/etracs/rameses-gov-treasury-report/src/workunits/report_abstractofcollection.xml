<workunit extends="wtemplates/gov/treasury/ReportController.xml" >
    <invokers>
        <invoker folderid="/explorer/report/treasury" action="init" 
                 caption="Report of Abstract on Collection" target="window" 
                 role="REPORT" permission="abstractofcollection.viewreport"/>
    </invokers>
    <code>
<![CDATA[

import com.rameses.rcp.common.*;
import com.rameses.rcp.annotations.*;
import com.rameses.osiris2.client.*;
import com.rameses.osiris2.reports.*;

class AbstractCollectionSummary extends com.rameses.etracs.shared.ReportController
{
    @Service('TCReportService') 
    def svc
    
    @Service('UserRoleService')
    def userroleSvc
    
    @Service('DateService')
    def dtsvc 
   
   
    String title = 'Report of Abstract on Collection'
    String reportpath = 'com/rameses/gov/treasury/report/collection/'
    String reportName = reportpath + 'abstractofcollection.jasper'
    
    
    def data
        
    def getReportData(){
        data = svc.getAbstractOfCollection(entity);
        return data.items; 
    }
   
    
    def formControl = [
        getFormControls: {
           return [
               new FormControl( "integer", [caption:'Year', name:'entity.year', required:true, preferredSize:'100,19', captionWidth:100]), 
               new FormControl( "combo", [caption:'Month', name:'entity.month', items:'months', expression:'#{item.name}', preferredSize:'100,19', captionWidth:100, immediate:true]),
               new FormControl( "combo", [caption:'Day', name:'entity.day', items:'daylist', preferredSize:'100,19', captionWidth:100, depends:'entity.month', dynamic:true]), 
               new FormControl( "combo", [caption:'Collector', name:'entity.collector', items:'collectors', expression:'#{item.fullname}', preferredSize:'0,19', captionWidth:100 ]),
               new FormControl( "combo", [caption:'Fund', name:'entity.fund', items:'funds', expression:'#{item.title}', preferredSize:'200,19', captionWidth:100 ]),
           ]    
        }
    ] as FormPanelModel;
   
       
    Map getParameters(){
        return data.info
    }
        
    List getFunds() {
        return svc.getFunds( )
    }
    
    List getCollectors() {
        def userlist = userroleSvc.getUsers([domain:'TREASURY', roles:'COLLECTOR'])
        return userlist.collect{[ 
            objid:it.objid, name:it.name, title:it.title, 
            fullname: it.lastname +', '+ it.firstname +' '+ (it.middlename? it.middlename: '')  
        ]}
    }
    
    List getMonths(){
        return dtsvc.getMonths()
    }
    
    List getDaylist() {
        return svc.getNumDays(entity.year, (entity.month?.index) - 1 )
    }
}
]]> 
    </code>
</workunit>