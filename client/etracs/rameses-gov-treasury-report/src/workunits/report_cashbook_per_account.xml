<workunit extends="wtemplates/gov/treasury/ReportController.xml" >
    <invokers>
        <invoker xfolderid="/explorer/report/treasury/collector" action="init" caption="Cashbook" target="window" index="7" role="COLLECTOR,LIQUIDATING_OFFICER,CASHIER"/>
    </invokers>
    <code>
<![CDATA[

import com.rameses.rcp.common.*;
import com.rameses.rcp.annotations.*;
import com.rameses.osiris2.client.*;
import com.rameses.osiris2.reports.*;

class CashbookReportController extends com.rameses.etracs.shared.ReportController
{
    @Service('CashbookReportService') 
    def svc
    
    @Service('FundLookupService')
    def fundSvc 
    
    String title = 'Cashbook Report'
    String reportpath = 'com/rameses/gov/treasury/report/cashbook/'
    String reportName = reportpath + 'cashbook.jasper'
        
    def initReport(){
        return 'default'
    }
   
    def data
    def getReportData(){
        data = svc.generateReport(entity);
        return data.items
    }
    
    def formControl = [
        getFormControls: {
            return [
                new FormControl( "integer", [caption:'Year', name:'entity.year', required:true, preferredSize:'100,19', captionWidth:100]), 
                new FormControl( "combo", [caption:'Month', name:'entity.month', required:true, items:'months', expression:'#{item.name}', allowNull:false, preferredSize:'100,19', captionWidth:100]),
                new FormControl( "combo", [caption:'Fund', name:'entity.fund', required:true, items:'funds', expression:'#{item.title}', allowNull:false, preferredSize:'0,19', captionWidth:100]),
            ]    
        }
    ] as FormPanelModel;
   
   
    Map getParameters(){
        return data.info
    }
    
    List getMonths(){
        return dtSvc.getMonths();
    }
    
    List getFunds() {
        def results = []; 
        def list = fundSvc.getList([:]); 
        list.findAll{ it.parentid==null }.each{ x-> 
            results << x; 
            def subfunds = list.findAll{ it.parentid==x.objid } 
            subfunds.each{ it.title='    '+ it.title }
            results.addAll( subfunds ); 
        } 
        return results;  
    }
}
]]>        
    </code>
</workunit>