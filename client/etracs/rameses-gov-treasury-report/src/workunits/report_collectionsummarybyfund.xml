<workunit extends="wtemplates/ReportController.xml" >
    <invokers>
        <invoker folderid="/explorer/report/treasury" action="init" caption="Report of Collection By Fund" target="window" index="6" 
            role="REPORT" permission="collectionbyfund.viewreport"/>
    </invokers>
    <code>
<![CDATA[

import com.rameses.rcp.common.*;
import com.rameses.rcp.annotations.*;
import com.rameses.osiris2.client.*;
import com.rameses.osiris2.reports.*;

class ReportCollectionSummaryByFund extends com.rameses.osiris2.reports.ReportController { 

    @Service('TCReportService') 
    def svc

    @Service('DateService')
    def dtsvc 

    String title = 'Report of Collection By Fund';
    String reportpath = 'com/rameses/gov/treasury/report/collection/';
    String reportName = reportpath + 'collectionsummarybyfund.jasper';
    
    def data;
    
    def funds = [];
    def months = [];
    def postingtypes = [
        [objid: 'BY_LIQUIDATION', title:'By Liquidation'],
        [objid: 'BY_REMITTANCE', title:'By Remittance']
    ]; 
        
    def initReport() {
        def resp = svc.initReport(); 
        months = resp.months; 
        funds = resp.funds; 
        entity.year = resp.year; 
        entity.day = resp.day; 
        if ( resp.month ) {
            entity.month = months.find{ it.index==resp.month }
        } 
        return super.initReport(); 
    } 
        
    def getReportData(){
        data = svc.getCollectionByFund(entity);
        return data.reportdata; 
    }
    
    def formControl = [
        getControlList: {
           return [
               [ type:"integer", caption:'Year', name:'entity.year', required:true, preferredSize:'100,19', captionWidth:100], 
               [ type:"combo", caption:'Month', name:'entity.month', items:'months', expression:'#{item.name}', preferredSize:'100,19', captionWidth:100, immediate:true],
               [ type:"combo", caption:'Day', name:'entity.day', items:'daylist', preferredSize:'100,19', captionWidth:100, depends:'entity.month', dynamic:true], 
               [ type:"combo", caption:'Posting Type', name:'entity.postingtype', items:'postingtypes', expression:'#{item.title}', allowNull:false, captionWidth:100 ],
               [ type:"combo", caption:'Fund', name:'entity.fund', items:'funds', expression:'#{item.title}', captionWidth:100 ],
               [ type:"label", caption:'', preferredSize:'100,10'],
               [ type:"checkbox", caption:'Include SubFund', name:'entity.withsubfund', captionWidth:120, depends:'entity.fund', disableWhen:'#{entity.fund?.objid==null}'],
           ]    
        }
    ] as FormPanelModel;
   
       
    Map getParameters(){
        return data.header;
    }
    
    List getDaylist() { 
        if ( entity.month?.index ) { 
            return svc.getNumDays(entity.year, (entity.month?.index) - 1 ); 
        } else {
            return null; 
        } 
    }
}
]]> 
    </code>
</workunit>