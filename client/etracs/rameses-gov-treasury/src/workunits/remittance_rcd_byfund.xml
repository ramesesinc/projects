<workunit>
    <invokers>
        <invoker type="remittance:reports" caption="Report on Collection and Deposits (RCD) By Fund" 
                action="initReport"  target="self" index="1"/>
        
        <invoker type="remittance:reportbyfund" caption="Report on Collection and Deposits (RCD) By Fund" 
                action="initReport"  target="self" index="1"/>
       
        <invoker type="formActions" caption="Back" action="_close" mnemonic="b" shortcut="ctrl B" icon="images/toolbars/arrow_left.png"/>
    </invokers>
    
    <code>
    <![CDATA[    
import com.rameses.rcp.annotations.*;
import com.rameses.rcp.common.*;
import com.rameses.osiris2.common.*;
import com.rameses.osiris2.client.*;
import com.rameses.osiris2.reports.*;
import com.rameses.util.*;
import java.rmi.server.*;

class RemittanceRCDByFundController extends com.rameses.etracs.shared.ReportController {

    @Service("RemittanceReportService")
    def svc

    String title = "Remittance RCD By Fund";
    String reportpath = "com/rameses/gov/treasury/remittance/report/rcd/" 
    String reportName = reportpath + 'rcd_main_fund.jasper' 

    boolean allowSelectAF = true;
    
    def _af; 
    def fund; 
    def fundlist;

    def initReport() {
        fundlist = svc.getFundlist( entity.objid ); 
        fund = (fundlist ? fundlist.first() : null); 
        return preview();
    }

    void setFund( o ) {
        this.fund = o; 

        _af = null; 
        preview(); 
        binding.refresh() 
    }
    
    def getAf() { 
        return _af; 
    } 
    void setAf( o ) {
        _af = o; 
        preview(); 
        binding.refresh(); 
    } 

    def getReportData() {
        return svc.getRCDReportDataByFund( entity, fund, af )
    }

    SubReport[] getSubReports() {
        return [ 
            new SubReport("CollectionType", reportpath + "collectiontype.jasper"),
            new SubReport("CollectionSummary", reportpath + "collectionsummary.jasper"),
            new SubReport("RemittedForms", reportpath + "remittedforms.jasper"),
            new SubReport("NonSerialRemittances", reportpath + "nonserialremittances.jasper"),
            new SubReport("NonSerialSummary", reportpath + "nonserialsummary.jasper"),
            new SubReport("CancelSeries", reportpath + "cancelseries.jasper"),
        ] as SubReport[];    
    }

    Map getParameters() { 
        def map = [ FUNDTITLE: fund.title ];
        if ( _af ) {
            map.FORMTITLE = 'Acct. Form : '+ _af.formno; 
        } 
        return map; 
    } 
} 
    ]]>
    </code>
    
    <pages>
        <page name="preview" template="com.rameses.gov.treasury.remittance.report.RemittanceReportByFund" />
    </pages>
   
</workunit>