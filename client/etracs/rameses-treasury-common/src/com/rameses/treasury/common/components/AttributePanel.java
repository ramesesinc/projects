/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.rameses.treasury.common.components;

import com.rameses.common.ExpressionResolver;
import com.rameses.rcp.common.MsgBox;
import com.rameses.rcp.control.XComponentPanel;
import com.rameses.rcp.ui.annotations.ComponentBean;


/**
 *
 * @author Elmo Nazareno
 */
@ComponentBean("com.rameses.treasury.common.components.AttributePanelModel")
public class AttributePanel extends XComponentPanel  {

    private String lookupHandler;
    private String editableWhen;
    private String schemaname;
    private String parentname;
    
    /**
     * Creates new form AttributePanel
     */
    public AttributePanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        xDataTable1 = new com.rameses.rcp.control.XDataTable();
        jPanel1 = new javax.swing.JPanel();
        btnAdd = new com.rameses.rcp.control.XButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        btnRemove = new com.rameses.rcp.control.XButton();

        setLayout(new java.awt.BorderLayout());

        xDataTable1.setColumns(new com.rameses.rcp.common.Column[]{
            new com.rameses.rcp.common.Column(new Object[]{
                new Object[]{"name", "attribute.name"}
                , new Object[]{"caption", "Name"}
                , new Object[]{"width", 150}
                , new Object[]{"minWidth", 150}
                , new Object[]{"maxWidth", 0}
                , new Object[]{"required", false}
                , new Object[]{"resizable", true}
                , new Object[]{"nullWhenEmpty", true}
                , new Object[]{"editable", false}
                , new Object[]{"visible", true}
                , new Object[]{"visibleWhen", null}
                , new Object[]{"textCase", com.rameses.rcp.constant.TextCase.NONE}
                , new Object[]{"typeHandler", new com.rameses.rcp.common.TextColumnHandler()}
            }),
            new com.rameses.rcp.common.Column(new Object[]{
                new Object[]{"name", "attribute.title"}
                , new Object[]{"caption", "Title"}
                , new Object[]{"width", 100}
                , new Object[]{"minWidth", 0}
                , new Object[]{"maxWidth", 0}
                , new Object[]{"required", false}
                , new Object[]{"resizable", true}
                , new Object[]{"nullWhenEmpty", true}
                , new Object[]{"editable", false}
                , new Object[]{"visible", true}
                , new Object[]{"visibleWhen", null}
                , new Object[]{"textCase", com.rameses.rcp.constant.TextCase.NONE}
                , new Object[]{"typeHandler", new com.rameses.rcp.common.TextColumnHandler()}
            })
        });
        xDataTable1.setHandler("listHandler");
        xDataTable1.setName("selectedItem"); // NOI18N
        add(xDataTable1, java.awt.BorderLayout.CENTER);

        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 0));
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        btnAdd.setName("addAttribute"); // NOI18N
        btnAdd.setVisibleWhen("#{ editable == true }");
        btnAdd.setText("Add");
        jPanel1.add(btnAdd);
        jPanel1.add(filler1);

        btnRemove.setName("removeAttribute"); // NOI18N
        btnRemove.setText("Remove");
        btnRemove.setVisibleWhen("#{ editable == true }");
        jPanel1.add(btnRemove);

        add(jPanel1, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.rameses.rcp.control.XButton btnAdd;
    private com.rameses.rcp.control.XButton btnRemove;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JPanel jPanel1;
    private com.rameses.rcp.control.XDataTable xDataTable1;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the lookupHandler
     */
    public String getLookupHandler() {
        return lookupHandler;
    }

    /**
     * @param lookupHandler the lookupHandler to set
     */
    public void setLookupHandler(String lookupHandler) {
        this.lookupHandler = lookupHandler;
    }

    

    /**
     * @return the editableWhen
     */
    public String getEditableWhen() {
        return editableWhen;
    }

    /**
     * @param editableWhen the editableWhen to set
     */
    public void setEditableWhen(String editableWhen) {
        this.editableWhen = editableWhen;
    }
    
    @Override
    public void afterLoad() {
        super.afterLoad();
        com.rameses.rcp.common.ComponentBean bean = (com.rameses.rcp.common.ComponentBean) super.getComponentBean();
        bean.setProperty("lookupHandler", lookupHandler );
        bean.setProperty("schemaname", schemaname );
        if( parentname != null ) {
            Object parent = super.getProperty( parentname );
            MsgBox.alert("parenti is " + parent);
            bean.setProperty("parent", parent);
        }
    }

    @Override
    public void refresh() {
        com.rameses.rcp.common.ComponentBean bean = (com.rameses.rcp.common.ComponentBean) super.getComponentBean();
        boolean t = true;
        if(this.editableWhen!=null) {
            t = ExpressionResolver.getInstance().evalBoolean( this.editableWhen , bean.getCaller() );
        }
        bean.setProperty("editable", t);
        super.refresh();
    }

    /**
     * @return the schemaname
     */
    public String getSchemaname() {
        return schemaname;
    }

    /**
     * @param schemaname the schemaname to set
     */
    public void setSchemaname(String schemaname) {
        this.schemaname = schemaname;
    }

    /**
     * @return the parentname
     */
    public String getParentname() {
        return parentname;
    }

    /**
     * @param parentname the parentname to set
     */
    public void setParentname(String parentname) {
        this.parentname = parentname;
    }

    
    
}
