<workunit schemaName="waterworks_account">
    <invokers>
        <invoker type="waterworks_account:form:menuActions" 
                 caption="Change Address" 
                 target="popup" 
                 action="init"
                 fields="address.*"
                 view="address"
                 visibleWhen="#{mode=='read'}"/>        
        
        <invoker type="waterworks_account:form:menuActions" 
                 caption="Change Meter" 
                 target="popup"
                 action="init"
                 fields="meter.*"
                 view="meter"
                 visibleWhen="#{mode=='read'}"/>  
        
        <invoker type="waterworks_account:form:menuActions" 
                 caption="Change Owner" 
                 target="popup"
                 action="init"
                 fields="owner.*,acctname"
                 view="owner"
                 visibleWhen="#{mode=='read'}"/>  
        
        <invoker type="waterworks_account:form:menuActions" 
                 caption="Change Reading" 
                 target="popup" 
                 action="init" 
                 fields="currentreading" 
                 view="reading"
                 visibleWhen="#{mode=='read'}" 
                 index="100" />                           
    </invokers>
    
    
    <code>
        <![CDATA[
        import com.rameses.common.*;
        import com.rameses.rcp.common.*;
        import com.rameses.rcp.annotations.*;
        import com.rameses.osiris2.client.*;
        import com.rameses.osiris2.common.*;
        import com.rameses.rcp.framework.ClientContext;
        import com.rameses.rcp.constant.*;
        import com.rameses.seti2.models.ChangeInfoModel;

        class WaterApplicationChangeInfoModel extends ChangeInfoModel { 
        
            @Binding 
            def binding; 
        
            @PropertyChangeListener 
            def changelisteners = [
                'info.metersize' : { o-> 
                    updateMeter( null, false ); 
                } 
            ]; 
        
            public def init() { 
                entity = caller.entity;
                schema = caller.schema;
                handler = { o->
                    caller.loadData();
                }

                try { 
                    return super.init(); 
                } finally { 
                    info._actiontype = invoker?.properties?.caption; 
                } 
            } 
            
            def getLookupMeter() { 
                def params = [ metersize: info.metersize ]; 
                params.onselect = { o-> 
                    updateMeter( o, true ); 
                } 
                params.onempty = {
                    updateMeter( null, true ); 
                } 
                return Inv.lookupOpener('waterworks_meter_wo_account:lookup', params); 
            } 
            void updateMeter( o, autorefresh ) {
                info.meter = o; 
                if ( autorefresh ) { 
                    binding.refresh('info.meter.*');
                } 
            } 
        }   
        ]]>
    </code>
    
    <pages>
        <page name="address" template="com.rameses.gov.etracs.waterworks.views.ChangeAccountAddressPage"/>
        <page name="meter" template="com.rameses.gov.etracs.waterworks.views.ChangeAccountMeterPage"/> 
        <page name="owner" template="com.rameses.gov.etracs.waterworks.views.ChangeAccountOwnerPage"/>  
        <page name="reading" template="com.rameses.gov.etracs.waterworks.views.ChangeAccountReadingPage"/>     
    </pages>
</workunit>