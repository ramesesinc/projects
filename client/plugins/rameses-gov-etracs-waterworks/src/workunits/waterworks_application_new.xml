<workunit  schemaName="waterworks_application">
    <invokers>
        <invoker type="waterworks_application:create"
                 formTitle="New Water Application" 
                 formId="waterworks_new"
                 action="start" />
    </invokers>
    <code>
    <![CDATA[
import com.rameses.rcp.annotations.*;
import com.rameses.rcp.annotations.*;
import com.rameses.rcp.common.*;
import com.rameses.util.*;
import com.rameses.osiris2.client.*;
import com.rameses.osiris2.common.*;
import com.rameses.seti2.models.*;

class WaterworksNewApplication extends CrudPageFlowModel { 

    @Service('WaterworksApplicationRuleService')
    def appSvc; 

    def imagedata; 

    def getLookupApplicant() { 
        def params = [:]; 
        params['query.type'] = 'INDIVIDUAL'; 
        params.allowSelectEntityType = false; 
        params.onempty = { entity.owner = null; } 
        params.onselect = { o-> 
            entity.owner = o; 
            if ( !entity.acctname ) {
                entity.acctname = o?.name; 
            }
        }
        return Inv.lookupOpener('entity:lookup', params); 
    }   

    void afterCreate() { 
        entity.address = [:]; 
    }

    void computeFee() { 
        if ( !entity.owner ) throw new BusinessException("Please specify an owner"); 
        
        def result = appSvc.getInitialInfo( [:] );
        entity.fees = result.fees; 
        entity.total = result.total;
        entity.requirements = result.requirements; 
        feeList.reload();
        requirementList.reload();
    } 

    def feeList = [
        fetchList: {o-> return entity.fees; }
    ] as BasicListModel;

    def requirementList = [
        fetchList: {o-> return entity.requirements; }
    ] as BasicListModel;    

    def base64 = new Base64Cipher();

    void addSignature() {
        com.rameses.rcp.sigid.SigIdViewer.open([ 
            getWidth: { return 300; }, 
            getHeight: { return 150; }, 
            onselect: { o-> 
                imagedata = o.imageData;
                def sigdata = [ 
                    image : imagedata, 
                    text  : o.sigString, 
                    key   : entity.objid 
                ]; 
                entity.signature = base64.encode( sigdata );
            } 
        ] as SigIdModel); 
    }         
    void removeSignature() { 
        imagedata = null; 
        entity.signature = null; 
    } 
}
    ]]>
    </code>
    
    <pageflow>
        <start>
            <transition to="initial"/>
        </start>
        <page name="initial" title="Waterworks Application Initial Page">
            <transition to="compute-fees" caption="Next" action="computeFee"/>
        </page>
        <page name="compute-fees" title="Fees and Requirements">
            <transition to="initial" caption="Back" />
            <transition to="success" caption="Submit" confirm="You are about to save the record. Proceed?" 
                        action="saveCreate"/>
        </page>
        <page name="success" title="Application"> 
            <transition to="end" caption="Close"/>
        </page>
        <end/>
    </pageflow>        
    
    <pages>
        <page name="initial" template="com.rameses.gov.etracs.waterworks.views.WaterworksApplicationInitialPage"/>
        <page name="compute-fees" template="com.rameses.gov.etracs.waterworks.views.WaterworksApplicationComputeFeePage"/>
        <page name="success" template="com.rameses.gov.etracs.waterworks.views.WaterworksApplicationSuccessPage"/>
    </pages>
      
</workunit>
