<workunit>
    
   <invokers>
         <invoker type="collectiontype:open" caption="Collection Type" action="open" role="MASTER" permission="collectiontype.open"/>
         <invoker type="collectiontype:create" caption="Collection Type" action="create" role="MASTER" permission="collectiontype.create"/>
   </invokers>
   
   <code>
       <![CDATA[
        import com.rameses.osiris2.common.*;
        import com.rameses.rcp.common.*;
        import com.rameses.rcp.annotations.*;
        import com.rameses.osiris2.client.*;
        
        class CollectionTypeController extends CRUDController {
        
            @Service("CollectionTypeService")
            def service;

            String entityName = "collectiontype";
            String prefixId = "COLLTYPE";
            boolean showConfirmOnSave = false;
            
            def selectedAccount;
            def selectedFund;
            
            Map createEntity() { 
                def m = super.createEntity(); 
                m.sortorder = 0; 
                m.allowonline = true;
                m.defaultvalue = 0;
                m.valuetype = 'ANY';
                m.accounts = []; 
                m.funds = []; 
                return m; 
            } 
            
            def getFormTypes() {
                return service.getFormTypes()*.objid;
            }
            
            def getHandlers() {
                return InvokerUtil.lookupOpeners( "collectiontype:handler" )*.properties.name;
            }
            
            def getBatchHandlers() {
                return InvokerUtil.lookupOpeners( "collectiontype:batchhandler" )*.properties.name;
            }
            
            def addAccount() {
                def h = { o->
                    o.collectiontypeid = entity.objid; 
                    entity.accounts << o; 
                    accountModel.reload();
                }
                return Inv.lookupOpener( "collectiontypeaccount:create", [handler:h] );
            }
            def editAccount() {
                if(!selectedAccount) throw new Exception("Please select an account"); 
                
                def h = { o->
                    accountModel.reload(); 
                } 
                return Inv.lookupOpener( "collectiontypeaccount:edit", [handler:h, entity: selectedAccount] ); 
            }
            def removeAccount() {
                if(!selectedAccount) throw new Exception("Please select an account");
                
                entity.accounts.remove(selectedAccount); 
                accountModel.reload();
            }
            
            
            def accountModel = [
                fetchList: { o-> 
                    return entity.accounts; 
                },
                sync: {
                    entity.accounts = service.getAccounts( [objid: entity.objid] ); 
                    accountModel.reload(); 
                } 
            ] as BasicListModel;

            
            void afterCreate( o ) {
                accountModel.reload();
            } 
            void afterOpen( o ) {
                accountModel.reload();
            }             
            void afterSave( o ) {
                accountModel.sync();
            } 
            
            def categoryModel = [
                fetchList: { o->
                    return service.getCategories();
                },
                onselect: { o->
                    entity.category = o.category;
                }
            ] as SuggestModel;
       }
       ]]>
   </code>
   
   <pages>
       <page template="com.rameses.enterprise.treasury.collection.CollectionTypePage" />
   </pages>
   
</workunit>