/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.rameses.enterprise.components;

import com.rameses.common.MethodResolver;
import com.rameses.rcp.common.FormPanelModel;
import com.rameses.rcp.control.XComponentPanel;
import com.rameses.rcp.ui.annotations.ComponentBean;

/**
 *
 * @author dell
 */
@ComponentBean("com.rameses.enterprise.components.DynamicInfoModel")
public class DynamicInfo extends XComponentPanel {

    private String handler;
    
    public String getHandler() {
        return handler;
    }

    public void setHandler(String handler) {
        this.handler = handler;
    }
    
    public DynamicInfo() {
        initComponents();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        xFormPanel1 = new com.rameses.rcp.control.XFormPanel();
        pnlNavigation = new javax.swing.JPanel();
        xButton1 = new com.rameses.rcp.control.XButton();
        xButton2 = new com.rameses.rcp.control.XButton();

        setLayout(new java.awt.BorderLayout());

        xFormPanel1.setCaptionWidth(100);
        xFormPanel1.setDynamic(true);
        xFormPanel1.setName("formPanel"); // NOI18N
        xFormPanel1.setPadding(new java.awt.Insets(0, 0, 0, 0));
        xFormPanel1.setShowCategory(true);
        add(xFormPanel1, java.awt.BorderLayout.CENTER);

        xButton1.setImmediate(true);
        xButton1.setName("doBack"); // NOI18N
        xButton1.setText("Back");

        xButton2.setName("doNext"); // NOI18N
        xButton2.setText("Next");

        javax.swing.GroupLayout pnlNavigationLayout = new javax.swing.GroupLayout(pnlNavigation);
        pnlNavigation.setLayout(pnlNavigationLayout);
        pnlNavigationLayout.setHorizontalGroup(
            pnlNavigationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNavigationLayout.createSequentialGroup()
                .addGap(134, 134, 134)
                .addComponent(xButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(xButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(150, Short.MAX_VALUE))
        );
        pnlNavigationLayout.setVerticalGroup(
            pnlNavigationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNavigationLayout.createSequentialGroup()
                .addGroup(pnlNavigationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(xButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        add(pnlNavigation, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel pnlNavigation;
    private com.rameses.rcp.control.XButton xButton1;
    private com.rameses.rcp.control.XButton xButton2;
    private com.rameses.rcp.control.XFormPanel xFormPanel1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void afterLoad() {
        com.rameses.rcp.common.ComponentBean cb = (com.rameses.rcp.common.ComponentBean)getComponentBean();
        cb.setProperty("handler", this.getProperty(getHandler()) );
        MethodResolver mr = MethodResolver.getInstance();
        try {
            mr.invoke(cb, "init", null);
        }
        catch(Exception ex) {
            throw new RuntimeException(ex.getMessage(), ex);
        }        
    }

    public int getCaptionWidth() {
        int i = xFormPanel1.getCaptionWidth();
        if(i<=0) xFormPanel1.setCaptionWidth(100);
        return  xFormPanel1.getCaptionWidth();
    }

    public void setCaptionWidth(int captionWidth) {
        this.xFormPanel1.setCaptionWidth( captionWidth );
    }

    public boolean isShowNavigation() {
        return pnlNavigation.isVisible();
    }

    public void setShowNavigation(boolean showNavigation) {
        pnlNavigation.setVisible(showNavigation);
    }


}
