import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;
import com.rameses.common.*
import com.rameses.services.extended.*;

class RuleFactService  {

	@ActiveDB("rule")
	def em;
	
	@Service("DateService")
	def dateSvc;

	@DataContext("sys_ruleset_fact")
	def rfact;

	@Env
	def env;

	@ProxyMethod
	public def find( def o ) {
		def f = em.read( o, "fact" );
		f.fields = em.getFactFields(o);
		f.rulesets = em.getFactRulesets(o);
		return f;
	}

	@ProxyMethod
	public def save( def o ) {
		if(!o.fields || o.fields.size() < 1)
			throw new Exception("There must be at least one field");

		if(!o.sortorder) o.sortorder = 0;
		em.save(o, "fact");
		o._deleted_fields?.each { 
			em.delete(it, "fact_field");
		}
		int i= 1;
		o.fields.each {
			it.sortorder = (i++);
			it.parentid = o.objid;
			em.save( it, "fact_field" );
		}
	}
	

}
