import com.rameses.common.*;
import com.rameses.annotations.*;
import com.rameses.services.extended.*;
import java.rmi.server.UID;

class CaptureLoanLedgerProceedsTagService extends ActiveCrudListService
{
	@Env
	def env;

	@ActiveDB("loan_ledger_proceeds")
	def em;

	@ActiveDB("loan_ledger")
	def ledger;

	@ActiveDB("borrower")
	def borrower;

	@Service("CaptureLoanLedgerTagService")
	def tagSvc;

	@Service("DateService")
	def dateSvc;

	@ProxyMethod
	public def getColumns( params ) {
		return tagSvc.getColumns(params);
	}

	@ProxyMethod
	public def getPayments( params ) {
		params.type = 'PROCEEDS';
		return tagSvc.getPayments(params);
	}

	@ProxyMethod
	public def addTag( params ) {
		def payment = ledger.read([objid: params.objid], 'payment');
		if (!payment) throw new Exception("Ledger payment record does not exist or has already been deleted.");

		tagSvc.create([paymentid: payment.objid, type: 'PROCEEDS', action: 'ADD']);

		def l = ledger.read([objid: payment.parentid]);
		if (!l) throw new Exception("Ledger record does not exist or has already been deleted.");

		def b = borrower.read([objid: l.acctid]);
		if (!b) throw new Exception("Borrower record does not exist or has already been deleted.");

		def currdate = dateSvc.serverDate;
		def user = [objid: env.USERID, name: env.NAME];

		def item = [
			objid 		: 'CLPROC'  + new UID(),
			parentid 	: l.objid,
			txnstate 	: 'SOLD',
			txntype 	: 'CAPTURE',
			dtcreated 	: currdate,
			author 		: user,
			description	: params.description,
			borrower 	: b,
			refid 		: payment.objid,
			refno 		: payment.refno,
			txndate 	: payment.txndate,
			amount 		: payment.amount,
			dtsold 		: currdate,
			soldby		: user
		];
		em.create(item);
	}

	@ProxyMethod
	public def removeTag( params ) {
		def payment = ledger.read([objid: params.objid], 'payment');
		if (!payment) throw new Exception("Ledger payment record does not exist or has already been deleted.");

		tagSvc.create([paymentid: payment.objid, type: 'PROCEEDS', action: 'REMOVE']);

		def proc = em.findByRefid([refid: payment.objid]);
		if (proc) em.delete(proc);
	}
}