import com.rameses.common.*;
import com.rameses.annotations.*;
import com.rameses.services.extended.*;
import java.rmi.server.UID;

public class CaptureLoanLedgerTagService
{
	@Env
	def env;

	@ActiveDB("loan_ledger_payment_tag")
	def em;

	@Service("DateService")
	def dateSvc;

	@ProxyMethod
	public def getColumns( params ) {
		return [
			[name: 'refno', caption: 'RefNo'],
			[name: 'txndate', caption: 'Date', type: 'date', outputFormat: 'MMM-dd-yyyy'],
			[name: 'amount', caption: 'Amount', type: 'decimal', format: '#,##0.00']
		];
	}

	@ProxyMethod
	public def create( params ) {
		def item = [
			objid	 	: 'LPT' + new UID(),
			dtcreated	: dateSvc.serverDate,
			author 		: getUser(),
			paymentid 	: params.paymentid,
			txntype 	: params.type,
			action 		: params.action
		];
		em.create(item);
	}

	@ProxyMethod
	public def getPayments( params ) {
		if (params.ledgerid) params.objid = params.ledgerid;
		def filter = ' AND p.parentid = $P{objid}';
		if (params.refno) filter += ' AND p.refno = $P{refno}';
		if (params.txndate) filter += ' AND p.txndate = $P{txndate}';
		params.filter = filter;
		if (params.type == 'NONCASH') {
			return em.getNoncashPayments(params);
		} else if (params.type == 'PROCEEDS') {
			return em.getProceedsPayments(params);
		}
		return [];
	}

	protected def getUser() {
		return [objid: env.USERID, name: env.NAME];
	}

}
