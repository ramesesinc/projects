import com.rameses.annotations.*;

class CustomerEntityInterceptor
{
	@DataContext('customer')
	def customer;

	@After(pattern="PersistenceService.open", eval="#{args[0]._schemaname == 'entityindividual'}")
	public void afterOpen( evt ) {
		def result = evt.result;
		if (!'individual'.equalsIgnoreCase(result.type+'')) return;

		def data = customer.find([objid: result.objid]).first();
		result.putAll(data);
	}

	@After(pattern="PersistenceService.create", eval="#{args[0]._schemaname == 'entityindividual'}")
	public void afterCreate( evt ) {
		def result = evt.result;
		if (!'individual'.equalsIgnoreCase(result.type+'')) return;

		def item = customer.read(result);
		println 'result ' + result;
		if (!item) customer.create(result); 
	}	

	@After(pattern="PersistenceService.update", eval="#{args[0]._schemaname == 'entityindividual'}")
	public void afterUpdate( evt ) {
		def result = evt.result;
		if (!'individual'.equalsIgnoreCase(result.type+'')) return;

		customer.find([objid: result.objid]).update(result); 
	} 

	@After(pattern="PersistenceService.removeEntity", eval="#{args[0]._schemaname == 'entityindividual'}")
	public void afterRemove( evt ) {
		def o = evt.args[0];
		customer.find([objid: o.objid]).delete(); 
	} 
}