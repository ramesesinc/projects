import com.rameses.annotations.*;
import com.rameses.common.*;
import com.rameses.services.extended.*;
import java.rmi.server.UID;

class LoanRouteService extends ActiveCrudListService 
{	
	@ActiveDB(value='loan_route')
	def em;

	@ActiveDB('datatxnlog') 
	def txnlog;

	@Service('DateService') 
	def dateSvc;

	@Env 
	def env;

	@ProxyMethod
	public def getColumns( params ) {
		return [
			[name:'code', caption:'Code', maxWidth:150, width:150],
			[name:'dayperiod', caption: 'Day Period', maxWidth:100, width:100],
			[name:'description', caption:'Description', maxWidth:200, width:200],
			[name:'area', caption:'Area']
		]; 
	} 

	void afterCreate( data ) {
		def loginfo = [
			objid 	: 'TLOG' + new UID(), 
			txndate : dateSvc.serverDate, 
			txnid   : data.code, 
			user    : [objid: env.USERID, username: env.USER], 
			action	: 'CREATE', 
			remarks : 'New Route '+ data.code 
		]; 
		txnlog.create( loginfo ); 
	}

	void afterUpdate( data ) {
		def loginfo = [
			objid 	: 'TLOG' + new UID(), 
			txndate : dateSvc.serverDate, 
			txnid   : data.code, 
			user    : [objid: env.USERID, username: env.USER], 
			action	: 'UPDATE', 
			remarks : 'Updated Route '+ data 
		]; 
		txnlog.create( loginfo ); 
	}

	void afterRemoveEntity( data ) {
		if (!data.remarks) data.remarks = 'Deleted route record'; 

		def loginfo = [
			objid 	: 'TLOG' + new UID(), 
			txndate : dateSvc.serverDate, 
			txnid   : data.code, 
			user    : [objid: env.USERID, username: env.USER], 
			action	: 'DELETE', 
			remarks : data.remarks 
		]; 
		txnlog.create( loginfo ); 
	} 
} 
