import com.rameses.annotations.*;
import com.rameses.common.*;
import com.rameses.services.extended.*;
import java.rmi.server.UID;

class LoanAppUtil 
{	
	@ActiveDB(value='loanapp')
	def loanapp;


	@ProxyMethod(local=true) 
	public void checkBorrowerForExistingLoan( params ) {
		if (!params.borrowerid) throw new Exception('Please specify borrowerid'); 

		def result = loanapp.findCurrentLoanForBorrower(params);
		if (!result) return;

		if (!result.level) result.level = 0;
		
		if (result.level >= 10) {
			//transaction cycle for this state level is already finished. 
			//please refer to loan_state_type table for the definition
			return; 
		} 

		if (result.type == 'JOINT') {
			throw new Exception('Customer is a joint borrower. Please refer to application no. '+result.appno); 
		}
		
		if (result.state == 'PENDING' || result.level <= 1) {
			throw new Exception('This borrower has a pending application.'); 
		} else {

			throw new Exception ('Loan application for this borrower is not yet closed.'); 
		}
	} 
} 