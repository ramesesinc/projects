import com.rameses.common.*;
import com.rameses.annotations.*;
import java.text.SimpleDateFormat;

class CashBreakdownReportService
{	
	@Env
	def env;

	@ActiveDB(value="collection_cb")
	def em;

	@ActiveDB(value="loan_route")
	def loan_route;

	@Service("DateService")
	def dateSvc;

	@Service("BranchService")
	def branchSvc;

	@ProxyMethod
	public def getReportData( params ) {
		//println 'params ' + params;
		def cb = em.read(params);//em.findCashbreakdownByCbsno([cbsno: params.cbsno]);
		if (!cb) throw new Exception("CBS record does not exist or has already been deleted.");

		def route = cb.collection.type;
		if (cb.group.type == 'route') {
			def r = loan_route.read([code: cb.group.objid]);
			route = r.description + " - " + r.area;
		}

		def branch = branchSvc.open([:]);
		def items = em.getDetails(cb);
		if (params.option == 'withoutbreakdown') {
			items.each{ o->
				o.qty = null;
				o.amount = null;
			}
		}
		def data = [
			date_period	: new SimpleDateFormat("yyyy-MMM-dd").format(cb.txndate),
			route 		: route,
			collector	: cb.collector.name,
			checkedby	: cb.verifier?.name,
			cbsno 		: cb.cbsno,
			items 		: items
		];
		branch.each{ k, v->
			data["branch_"+k] = v;
		}
		return data;
	}

}