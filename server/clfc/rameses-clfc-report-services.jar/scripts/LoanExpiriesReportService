import com.rameses.common.*;
import com.rameses.annotations.*;
import java.text.SimpleDateFormat;

class LoanExpiriesReportService
{
	@Env
	def env;

	@ActiveDB("loanapp")
	def em;

	@Service("DateService")
	def dateSvc;

	@Service("BranchService")
	def branchSvc;

	private void validate( params ) {
		def sd = parseDate(params.startdate);
		def ed = parseDate(params.enddate);

		if (sd.compareTo(ed) > 0) {
			throw new Exception("Start date must not be greater than end date.");
		}
	}

	@ProxyMethod
	public def getReportData( params ) {
		if (!params.startdate) throw new Exception("Please specify start date.");
		if (!params.enddate) throw new Exception("Please specify end date.");
		validate(params);


		def df = new SimpleDateFormat("MMM-dd-yyyy");
		def sd = df.format(parseDate(params.startdate));
		def ed = df.format(parseDate(params.enddate));

		def list = em.getExpiredListReportData(params);
		if (!list) {
			throw new Exception("No expiries from " + sd + " TO " + ed + ".");
		}

		def branch = branchSvc.open([:]);
		def data = [
			date_period 		: sd + " TO " + ed,//new SimpleDateFormat("yyyy-MMM-dd").format(java.sql.Date.valueOf(params.txndate+"")),
			dtprinted			: new SimpleDateFormat("MMM-dd-yyyy hh:mm:ss a").format(dateSvc.serverDate),
			printedby 			: env.NAME,
			items				: list
		];
		branch.each{ k, v->
			data["branch_"+k] = v;
		}
		return data;
	}

	private def parseDate( date ) {
		if (!date) return null;
		if (date instanceof Date) {
			return date;
		} else {
			return java.sql.Date.valueOf(date);
		}
	}

}