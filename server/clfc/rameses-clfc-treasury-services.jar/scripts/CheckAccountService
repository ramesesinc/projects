import com.rameses.common.*;
import com.rameses.annotations.*;
import com.rameses.services.extended.*;

class CheckAccountService extends ActiveCrudListService
{
	@Env
	def env;

	@ActiveDB("checkaccount")
	def em;

	@Service("DateService")
	def dateSvc;

	@ProxyMethod
	public def getColumns( params ) {
		def cols = [];

		if (!params.state) cols << [name: 'state', caption: 'Status'];

		cols << [name: 'dtcreated', caption: 'Date Created'];
		cols << [name: 'author.name', caption: 'Created By'];
		cols << [name: 'checkno', caption: 'Check No.'];
		cols << [name: 'txndate', caption: 'Check Date', type: 'date', outputFormat: 'MMM-dd-yyyy'];
		cols << [name: 'amount', caption: 'Amount', type: 'decimal', format: '#,##0.00'];
		cols << [name: 'bank.name', caption: 'Bank'];

		return cols;
	}

	void beforeList( params ) {
		params.searchtext = (params.searchtext? params.searchtext : '') + '%';
		if (params.state) {
			params._listMethod = 'getListByState';
		}
	}

	@ProxyMethod
	public def getStates() {
		return [
			[caption: 'All'],
			[caption: 'FOR CLEARING', state: 'FOR_CLEARING'],
			[caption: 'CLEARED', state: 'CLEARED'],
			[caption: 'DEPOSITED', state: 'DEPOSITED']
		]
	}

	void beforeCreate( data ) {
		data.dtcreated = dateSvc.serverDate;
		date.author = [objid: env.USERID, name: env.NAME];
	}

}
