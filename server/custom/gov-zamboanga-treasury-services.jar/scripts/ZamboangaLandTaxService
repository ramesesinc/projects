import com.rameses.annotations.*
import com.rameses.common.*
import com.rameses.services.extended.*

class ZamboangaLandTaxService {
	@Service('LogService')
	def logSvc 

	@DataContext('rptledger')
	def em_rptledger

	@DataContext('faas')
	def em_faas

	@DataContext('faas_list')
	def em_faaslist


	@ProxyMethod 
	public def assignTaxpayer(params) {
		if (!params.taxpayer) throw new Exception('Taxpayer is required');
		if (!params.items) throw new Exception('Items are required');

		params.items.each{
			em_rptledger.find([objid: it.objid]).update([taxpayer_objid: params.taxpayer.objid])
			em_faas.find([objid: it.faasid]).update([taxpayer_objid: params.taxpayer.objid])
			em_faaslist.find([objid: it.faasid]).update([taxpayer_objid: params.taxpayer.objid])

			def msg = 'Assign new taxpayer # ' + params.taxpayer.objid
			logSvc.logA( 'assign-taxpayer', 'faas', it.faasid, msg )
			if (it.objid != it.faasid) {
				logSvc.logA( 'assign-taxpayer', 'rptledger', it.objid, msg )
			}
		}
	}

}