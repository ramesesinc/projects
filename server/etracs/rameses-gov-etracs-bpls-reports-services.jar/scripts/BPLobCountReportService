import com.rameses.annotations.*;
import com.rameses.common.*;

class BPLobCountReportService
{
	
	@Service('NumberService')
	def numSvc;
	
	@ActiveDB("bpreport")
	def em

	@ProxyMethod
	public def getReport( params ) { 
		params.barangayid = ( params.barangay ? params.barangay.objid : '%' );
		params.classificationid = ( params.classification ? params.classification.objid : '%' );
		params.filter = ''' AND a.dtfiled BETWEEN $P{startdate} AND $P{enddate} ''';

		def list = []; 
		if( params.state_info ) {
			params.state_info = 'INFO'
			list << '''$P{state_info}''';
		}	
		if( params.state_assessment ) {
			params.state_assessment = 'ASSESSMENT'
			list << '''$P{state_assessment}''';
		}	
		if( params.state_payment ) {
			params.state_payment = 'PAYMENT'
			list << '''$P{state_payment}''';
		}
		if( params.state_release ) {
			params.state_release = 'RELEASE'
			list << '''$P{state_release}''';
		}
		if( params.state_completed ) {
			params.state_completed = 'COMPLETED'
			list << '''$P{state_completed}''';
		}
		if ( list ) { 
			params.filter += " AND a.state IN (" + list.join(',') + ")";
		} 

		list = em.getLOBCountList( params );
		if( ! list ) throw new Exception('No records found.');

		list.each {
			it.newcount  = Integer.parseInt(it.newcount+""); 
			it.renewcount  = Integer.parseInt(it.renewcount+""); 
			it.addlobcount  = Integer.parseInt(it.addlobcount+""); 
			it.retirecount  = Integer.parseInt(it.retirecount+""); 
		} 
		return list 		
	}

}