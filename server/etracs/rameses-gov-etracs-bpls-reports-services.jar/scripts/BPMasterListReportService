
import com.rameses.annotations.*;
import com.rameses.common.*;

class BPMasterListReportService {

	@ActiveDB("bpreport")
	def em

	@Service('NumberService')
	def numSvc;

	@ProxyMethod
	public def getReport( params ) { 
		if ( !params.year ) throw new Exception('year parameter is required');

		params.filter = '';

		def buffer = []; 
		if ( params.state_active ) { 
			params.state_active = 'ACTIVE'; 
			buffer << '''$P{state_active}''';
		} 
		if ( params.state_processing ) { 
			params.state_processing = 'PROCESSING'; 
			buffer << '''$P{state_processing}''';
		} 
		if ( params.state_retired ) { 
			params.state_retired = 'RETIRED'; 
			buffer << '''$P{state_retired}'''; 
		} 
		if ( buffer ) { 
			params.filter += " AND b.state IN (" + buffer.join(',') + ")"; 
		} else { 
			throw new Exception('Please select at least one status'); 
		} 

		if ( params.permittype?.objid ) { 
			params.permittypeid = params.permittype.objid; 
			params.filter += ''' AND b.permittype=$P{permittypeid} '''; 	
		} 

		def list = em.getTaxpayerMasterList( params );
		if( ! list ) throw new Exception('No records found.');

		list.each { 
			it.capital = (it.capital ? numSvc.round( it.capital ) : 0.00 )
			it.gross = (it.gross ?  numSvc.round( it.gross ) : 0.00 )
			if ( it.businessaddress ) {
				it.businessaddress = it.businessaddress.toString().replaceAll("\\s"," ").trim(); 
			}
			if ( it.owner?.address ) {
				it.owner.address = it.owner.address.toString().replaceAll("\\s"," ").trim(); 
			}
		} 
		return list; 
	} 
} 