
import com.rameses.annotations.*;
import com.rameses.common.*;

class BPMasterListReportService {

	@ActiveDB("bpreport")
	def em

	@Service('NumberService')
	def numSvc;

	@ProxyMethod
	public def getReport( params ) { 
				if ( !params.year ) 
			throw new Exception('year parameter is required'); 
		if ( !params.permittype?.objid ) 
			throw new Exception('permit type parameter is required'); 		

		params.permittypeid = params.permittype.objid;  

		def apptypes = []; 
		if ( params.type_new ) {
			params.apptype_new = 'NEW'; 
			apptypes << '''$P{apptype_new}''';
		}
		if ( params.type_renew ) {
			params.apptype_renew = 'RENEW'; 
			apptypes << '''$P{apptype_renew}''';
		}
		if ( params.type_retire ) {
			params.apptype_retire = 'RETIRE'; 
			apptypes << '''$P{apptype_retire}''';
		}
		if ( params.type_additional ) {
			params.apptype_additional = 'ADDITIONAL'; 
			apptypes << '''$P{apptype_additional}''';
		}
		if ( params.type_retirelob ) {
			params.apptype_retirelob = 'RETIRELOB'; 
			apptypes << '''$P{apptype_retirelob}''';
		}

		def appstates = []; 
		if ( params.state_completed ) {
			params.appstate_completed = 'COMPLETED'; 
			appstates << '''$P{appstate_completed}''';
		}
		if ( params.state_release ) {
			params.appstate_release = 'RELEASE'; 
			appstates << '''$P{appstate_release}''';
		}
		
		params.apptypefilter = '';
		if ( apptypes ) { 
			params.apptypefilter = apptypes.join(','); 
		} else { 
			params.apptypefilter = "''";	
		}

		params.appstatefilter = ''; 
		if ( appstates ) { 
			params.appstatefilter = appstates.join(','); 
		} else { 
			params.appstatefilter = "''"; 
		} 

		def list = em.getTaxpayerMasterList( params );
		if ( !list ) throw new Exception('No record(s) found that matches your criteria.');

		def decformat = new java.text.DecimalFormat("0.00");
		list.each { 
			it.declaredcapital = round( decformat, it.declaredcapital );
			it.declaredgross = round( decformat, it.declaredgross );
			it.capital = round( decformat, it.capital );
			it.gross = round( decformat, it.gross );
			if ( it.businessaddress ) {
				it.businessaddress = it.businessaddress.toString().replaceAll("\\s"," ").trim(); 
			}
			if ( it.owner?.address ) {
				it.owner.address = it.owner.address.toString().replaceAll("\\s"," ").trim(); 
			}
		} 
		return list; 
	} 

	private def round( decformat, value ) {
		if ( value instanceof Number ) {
			def str = decformat.format( value ); 
			return new java.math.BigDecimal( str ); 
 		} 
		return 0.0; 
	}
} 