import com.rameses.annotations.*
import com.rameses.common.*
import java.rmi.server.UID;
import com.rameses.util.*;
import com.rameses.io.*;
import com.rameses.services.extended.*;

class JuridicalEntityService extends ActiveCrudListService {

	@ActiveDB("entityjuridical")
	def	em; 

	@Service("EntityService")
    def entitySvc;

	@DataContext("entity")
	def	entityDB; 


	def INDEX_CHAR_COUNT = 300;

	String pagingKeys = 'e.objid'

	@ProxyMethod
	public def getColumns( params ) {
		return [
			[name:'entityno', caption:'Entity No', maxWidth:150, resizable:false], 
			[name:'name', caption:'Company Name'], 
			[name:'address.text', caption:'Company Address'], 
			[name:'dtregistered', caption:'Date Registered', width:100, resizable:false, alignment:'center'], 
			[name:'orgtype', caption:'Org.Type'], 
			[name:'nature', caption:'Business Nature']
		]; 
	}

	void updateName( o ) {
		def len = o.name.length()
		if (len > INDEX_CHAR_COUNT) len = INDEX_CHAR_COUNT
		o.entityname = o.name.substring(0, len);		
	}

	public void beforeCreate(o) {
		if(!o.objid) o.objid = "JUR"+new UID();
		updateName(o);
		o.type = 'JURIDICAL';
		o.loaded = true;
		entitySvc.create( o );
	}

	public void beforeUpdate(o) {
		updateName(o);
		o.loaded = true;
		entitySvc.update( o );
	}

	public void beforeRemoveEntity(o) {
		o.loaded = true;
	}

	public void afterRemoveEntity(o) {
		entitySvc.removeEntity( o );
	}

	public void afterOpen( o ) {
		o.loaded = true;
		o.putAll( entitySvc.open( o ));
	}

	@ProxyMethod
	public def getPositionList(o) {
		o.searchtext += "%";
		o._limit = 8;
		return em.getPositionList(o)*.position;
	}

	@ProxyMethod
	public void editName(o) {
		updateName(o);
		entityDB.find( [objid: o.objid] ).update( [name:o.entityname, entityname:o.entityname] );
	}

}
