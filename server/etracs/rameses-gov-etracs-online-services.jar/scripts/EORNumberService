import com.rameses.annotations.*
import com.rameses.util.*
import com.rameses.common.*
import treasury.utils.*;

class EORNumberService {

    @Env 
    def env 

    @Service("DateService")
    def dateService

    @DataContext('paymentpartner')
    def partnerEm;

    @DataContext('eor_number')
    def eorNumEm;

    @Service('OrgService')
    def orgSvc 

    @ProxyMethod(local=true)
    public def getNextNumber( def partnerid ) {
        def org = orgSvc.getRoot(); 
        def orgid = (org?.objid ? org.objid : '');

        def part = partnerEm.find([ objid: partnerid ]).first(); 
        def indexno = (part?.indexno ? part.indexno : ''); 

        String prefix = 'EOR'+ indexno + orgid + dateService.getServerYear();
        def z = eorNumEm.find( [objid: prefix] );
        if( !z) {
            z = [objid: prefix, currentno: 1 ];
            eorNumEm.create( z );
        }
        else {
            eorNumEm.find( [objid:prefix] ).update( [currentno: "{currentno + 1}"] );
        }
        return prefix + String.format("%06d", z.currentno );
    }   

}
