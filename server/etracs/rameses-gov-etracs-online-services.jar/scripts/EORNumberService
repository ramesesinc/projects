import com.rameses.annotations.*
import com.rameses.util.*
import com.rameses.common.*
import treasury.utils.*;

class EORNumberService {

    @Env 
    def env 

    @Service("DateService")
    def dateService

    @DataContext('paymentpartner')
    def partnerEm;

    @DataContext('eor_number')
    def num_db;

    @Service('OrgService')
    def orgSvc 

    @ProxyMethod(local=true)
    public def getNextEORNumber( def partnerid ) {
        def org = orgSvc.getRoot(); 
        def orgid = (org?.objid ? org.objid : '');

        def part = partnerEm.find([ objid: partnerid ]).first(); 
        def indexno = (part?.indexno ? part.indexno : ''); 

        String prefix = 'EOR'+ indexno + orgid + dateService.getServerYear();
        def rec = num_db.find([ objid: prefix ]).first();
        if ( rec) {
            num_db.find([ objid: prefix ]).update([ currentno: rec.currentno+1 ]);
        } else {
            rec = [ objid: prefix, currentno: 1 ];
            num_db.create( rec );
        }
        return prefix + String.format("%06d", rec.currentno );
    }   

    @ProxyMethod(local=true)
    public def getNextPONumber( prefix ) {
        def seqname = 'PAYORDER'; 
        def rec = num_db.find([ objid: seqname ]).first(); 
        if ( rec ) {
            num_db.find([ objid: seqname ]).update([ currentno: rec.currentno+1 ]); 
        } else { 
            rec = [ objid: seqname, currentno: 1 ]; 
            num_db.create( rec ); 
        } 
        return (prefix ? prefix : '') + String.format("%010d", rec.currentno );
    } 
} 
