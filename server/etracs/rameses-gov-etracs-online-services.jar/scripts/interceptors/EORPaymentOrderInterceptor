import com.rameses.annotations.*;
import com.rameses.util.KeyGen;

class EORPaymentOrderInterceptor {
	
	@Service('OrgService')
	def orgSvc; 

	@Service("DateService")
	def dateSvc;

	@Service("EORNumberService") 
	def seqSvc;	

	@Before( pattern="PersistenceService.create", eval="#{args[0]._schemaname == 'eor_paymentorder'}") 
	void beforeCreate( evt ) {
		def param = evt.args[0];

		String locid = orgSvc.getRoot().code.replaceAll('-', ''); 
		param.objid =  KeyGen.generateAlphanumKey( locid.padRight( 6, "0" ), 12 );
		param.txndate = dateSvc.getServerDate(); 
		param.controlno =  seqSvc.getNextPONumber( locid.padRight( 5, "0" ));  
		param.locationid = locid; 

		def cal = Calendar.instance; 
		cal.setTime( param.txndate ); 
		cal.add( Calendar.HOUR, 24 ); 
		param.expirydate = new java.sql.Timestamp( cal.getTimeInMillis() ); 
		if ( param.txntypename==null ) param.txntypename = param.txntype; 
	}
}