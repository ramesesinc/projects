import com.rameses.common.*
import com.rameses.annotations.*
import com.rameses.services.extended.*

class TDOnlineService {
	@Env 
	def env

	@Service('RPTBillingService')
	def billSvc

	@Service('RPTUtil')
	def util

	@DataContext('faas')
	def em_faas

	@DataContext('rptpayment')
	def em_rptpayment
	

	@ProxyMethod
	public def verifyTaxDec(params) {
		params.tdno = params.refno 
		def bill = billSvc.generateBillByTdNo(params)
        def rptledger = getLedger(bill)
        def lastpayment = getLastPayment(rptledger)

        return [
            tdno: rptledger.tdno,
            pin: rptledger.fullpin,
            titleno: rptledger.titleno,
            cadastrallotno: rptledger.cadastrallotno,
            classcode: rptledger.classcode,
            owner: rptledger.taxpayer,
            administrator: rptledger.administrator,
            areaha: rptledger.totalareaha,
            areasqm: rptledger.totalareasqm,
            totalmv: rptledger.totalmv,
            totalav: rptledger.totalav,
            bill: [
                lastyearpaid: rptledger.lastyearpaid, 
                lastqtrpaid: rptledger.lastqtrpaid,
                amtdue: bill.totals.total,
                period: rptledger.period,
            ],
            lastpayment: lastpayment,
        ]
	}

	def getLedger(bill) {
		def rptledger = bill.ledgers.first()
		def faas = em_faas.select('titleno').find([objid: rptledger.faasid]).first()
		if (faas) {
			rptledger.putAll(faas)
		}
		rptledger.period = buildPeriodCovered(rptledger) 
		return rptledger 
	}

	def buildPeriodCovered(rptledger) {
		def items = [
			[	
				fromyear: rptledger.fromyear, 
				fromqtr: rptledger.fromqtr,
				toyear: rptledger.toyear,
				toqtr: rptledger.toqtr, 
			]
		]
		util.buildPeriodCovered(items)
		return items.first().period.toUpperCase().replace('FULL', '') 
	}

	def getLastPayment(rptledger) {
		def pmt = em_rptpayment
					.select('receiptno,receiptdate,amount,paidby_name,paidby_address')
					.where('refid = :objid and voided = 0', rptledger)
					.orderBy('receiptdate desc')
					.first()

		if (!pmt) pmt = [:]
		return pmt 
	}

}
