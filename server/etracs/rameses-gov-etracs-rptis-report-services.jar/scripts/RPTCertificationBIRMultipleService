import com.rameses.annotations.*
import com.rameses.common.*;
import com.rameses.services.extended.*;

class RPTCertificationBIRMultipleService 
{
    @ActiveDB('rptcertification_bir')
    def em;

    @Service('RPTCertificationService')
    def certSvc 

	
    @ProxyMethod
    public def getPropertiesForBIR(entity){
    	entity.taxpayerid = entity.taxpayer.objid 

    	def data = em.findRyForAsOfYear(entity)
    	if (!data) 
    		throw new Exception('Revision year cannot be determined for the specified As of Year.')
    	entity.ry = data.ry 

    	def list = em.getPropertiesForBIR(entity)
    	if (!list)
    		throw new Exception('There are no properties registered as of year ' + entity.asofyear + '.')
    	return list 
    }


	@ProxyMethod
	public def createCertification( cert ) {
		certSvc.createCertification(cert)
		
		cert.properties.each{
			em.createItem([objid:cert.objid, refid:it.objid])
		}
		cert.items = getItems(cert)
		return cert 
	}

	@ProxyMethod
	public def openCertification(objid) {
		def cert = certSvc.openCertification(objid)
		if (! cert ) 
			throw new Exception('Certification does not exist or has already been deleted.')
		cert.items = getItems(cert)
		return cert 
	}

	def getItems(cert){
		def items = em.getItems(cert).each{
			it.street = (it.street ? it.street : it.barangay)
			it.description = it.cadastrallotno
			if (it.rputype == 'bldg')
				it.description = 'Type ' + em.getBldgTypes(it).code.join('/')
		}
		return items 
	}
}
