import com.rameses.annotations.*
import com.rameses.eserver.*;
import com.rameses.common.*;

class RPTCertificationNoPropertyService 
{
    @PersistenceContext('main')
    def em;

    @Service('RPTCertificationService')
    def certSvc 

    
	@ProxyMethod
	public def createCertification( cert ) {
		checkExistingProperties(cert.taxpayer.objid)
		return certSvc.createCertification(cert)
	}

	@ProxyMethod
	public void checkExistingProperties( taxpayerid ) {
		def prop = em.sqlContext.createNamedQuery('rptcertification:getProperties')
						.setParameter('taxpayerid', taxpayerid).singleResult
		if (prop)
			throw new Exception('Selected taxpayer has existing properties.')
	}

	@ProxyMethod
	public def openCertification(objid) {
		def cert = certSvc.openCertification(objid)
		if (! cert ) 
			throw new Exception('Certification does not exist or has already been deleted.')
		return cert 
	}
}
