import com.rameses.annotations.*
import com.rameses.common.*;
import com.rameses.services.extended.*;
import java.rmi.server.UID;
import java.math.BigDecimal;

class RPTReportAgriculturalService
{
    @ActiveDB('rptreport_agricultural')
    def em;

    @Service('DateService')
    def dtSvc 

    
    @Async
    @ProxyMethod
    public def getActualUseSummaryByArea(params){
        params.taxable = 1
        if ('EXEMPT'.equalsIgnoreCase(params.taxability)){
            params.taxable = 0
        }
        params.lguid = params.lgu.objid 
        params.period = 'As of ' + dtSvc.format('MMMMM dd, yyyy', dtSvc.serverDate)
        
        def list = em.getActualUseSummaryByArea(params)
        if (!list) throw new Exception('Records not found.')

        def p = [:]
        p.FORLGUNAME= params.lgu.lgutype.toUpperCase() + ' OF ' + params.lgu.name
        p.PERIOD = params.period 
        p.TAXABILITY = params.taxability

        return [
            parameters  : p, 
            reportdata  : list,
        ]
    }
}
