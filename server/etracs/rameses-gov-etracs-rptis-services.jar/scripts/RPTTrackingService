import com.rameses.annotations.*
import com.rameses.common.*;
import com.rameses.services.extended.*;


class RPTTrackingService
{
	@DataContext('rpttracking')
	def em 

	@Service('DateService')
	def dtSvc

	@Service('Var')
	def var

	@Service('SequenceService')
	def seqSvc

	@Service('OrgService')
	def orgSvc 


	@ProxyMethod
	public def beforeSave(entity) {
		def serverDate = dtSvc.serverDate 
		if ( dtSvc.parse('yyyy-MM-dd', entity.releasedate) < serverDate ){
			throw new Exception('Release Date should not be greater than current date');
		}
		def org = orgSvc.getRoot();
		def orgcode = org.code.replaceAll('-','') 
		def key = 'RPTTRACKING-' + orgcode 
		entity.trackingno = 'RT' + orgcode + seqSvc.getNextFormattedSeries(key)
		entity.dtfiled = dtSvc.serverDate 
	}

	@ProxyMethod
	public def getLogs(entity) {
		return em.getLogs(entity)
	}

	@ProxyMethod
	public def findById(objid) {
		return em.read([objid:objid])
	}

	@ProxyMethod
	public void delete( tracking ) {
		em.delete(tracking)
	}
}

