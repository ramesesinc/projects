import com.rameses.annotations.*
import com.rameses.eserver.*;
import com.rameses.common.*;

class RPTTrackingInterceptor
{
	@Service('RPTTrackingService')
    def svc

	@DataContext('faas_list')
	def em_faaslist



	@Before(pattern='PersistenceService.create', eval="#{args[0]._schemaname=='rpttracking'}")
	public void beforeCreate(evt){
		def entity = evt.args[0]
		svc.beforeSave(entity)
	}

	@After(pattern='PersistenceService.create', eval="#{args[0]._schemaname=='rpttracking' && args[0].filetype=='faas'}")
	public void afterCreate(evt){
		def entity = evt.args[0]
		em_faaslist.find([objid: entity.objid]).update([trackingno: entity.trackingno])

	}

	@After(pattern='PersistenceService.read', eval="#{args[0]._schemaname=='rpttracking'}")
	public void afterRead(evt){
		def entity = evt.result
		if (entity) {
			entity.logs = svc.getLogs(entity)
		}
	}


}

