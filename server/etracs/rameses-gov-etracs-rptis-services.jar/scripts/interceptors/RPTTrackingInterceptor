import com.rameses.annotations.*
import com.rameses.common.*;
import com.rameses.services.extended.*;

class RPTTrackingInterceptor
{
	@DataContext('rptacknowledgement_item')
	def em_tracking

	@DataContext('faas_previous')
	def em_faas_previous

	@DataContext('faas_list')
	def em_faas_list
	
	@After(pattern='FAASService.initOnlineTransaction', index=1000000)
	public void afterCreateFaas(evt){
		def faas = evt.result
		
		faas.previousfaases.each {
			def tracking = em_tracking.find([faas_objid: it.prevfaasid]).first() 
			if (tracking) {
				tracking.newfaas = [objid: faas.objid]
				em_tracking.update(tracking)
				em_faas_list.find([objid: faas.objid]).update([trackingno: tracking.trackingno])
			}
		}
	}


	@Before(pattern='FAASService.deleteFaas', index=1000000)
	public void beforeDeleteFaas(evt){
		def faas = evt.args[0]

		em_faas_previous.find([faasid: faas.objid]).list().each {
			em_tracking.find([faas_objid: it.prevfaasid]).update([newfaas_objid: null])	
		}
	}

}

