import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;
import com.rameses.common.*
import com.rameses.services.extended.*

class AFIssueInterceptor { 
	
	@Service("SequenceService") 
	def seqSvc;

	@DataContext("af_control")
	def afcontrol;

	@DataContext("af_control_detail")
	def afcd;

	@Env
	def env;

	@After(pattern="PersistenceService.read", eval="#{ args[0]._schemaname == 'afissue' }")
	public void beforeOpen( evt ) { 
		def result = evt.result; 
		if ( !result.dtissued ) { 
			result.dtissued = result.dtfiled; 
		} 

		result.items.each { o-> 
			o.items = []; 			
			def details = afcd.find([ refid: result.objid ]).where('parent.afid = :afid', [afid: o.item.objid]).list(); 
			details.groupBy{[ afid: it.parent.afid, batchno: it.parent.batchno ]}.each{ k,v-> 
				def afmin = v.min{ it.beginstartseries } 
				def afmax = v.max{ it.beginendseries } 
				o.items << [ 
					startseries : afmin.beginstartseries, 
					endseries   : afmax.beginendseries, 
					startstub   : afmin.parent.stubno, 
					endstub     : afmax.parent.stubno 
				]; 
			} 
		}
	}
}