import com.rameses.annotations.*;
import com.rameses.common.*
import com.rameses.services.extended.*
import com.rameses.util.*


class AFControlExportImportService  
{ 
	@ActiveDB('afcontrol_export_import')
	def adb 

	@ActiveDB('af_inventory')
	def af_inventoryEm

	@ActiveDB('af_control')
	def af_controlEm
	

	@Env
	def env 

	@ProxyMethod
	public def getAfControlInfo(af){
		def params = [controlid:af.objid, _pagingKeys: "ac.objid"]
		def control = adb.findAfControl(params)
		control.inventory = adb.findAfInventory(params)
		control.inventorydetails = adb.getAfInventoryDetails(params)
		adb.updateAfModeToRemote(params)
		return control
	}

	@ProxyMethod
	public void postImportedAf( control ) {
		checkExistingAf(control)

		af_inventoryEm.create( EntityUtil.mapToField(control.inventory) )
		af_controlEm.create( EntityUtil.mapToField(control) )
		control.inventorydetails.each{
			af_inventoryEm.create( EntityUtil.mapToField(it), "detail" )
		}
	}


	void checkExistingAf(control){
		def afc = adb.findAfControl(control)
		if (afc)
			throw new Exception('Series has already been posted.')
	}


}
