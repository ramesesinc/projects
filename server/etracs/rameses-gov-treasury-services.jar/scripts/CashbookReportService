import com.rameses.annotations.*;
import com.rameses.common.*
import com.rameses.services.extended.*
import com.rameses.util.*


class CashbookReportService  
{ 
	@ActiveDB('cashbook_report')
	def adb 

	@Env
	def env 
 
	@Service('DateService')
	def dtSvc

	@Service('ReportParameterService')
	def reportSvc

	@ProxyMethod
	public def generateReport( params ) {
		buildDateFilter( params )
		params.accountid = params.account ? params.account.objid : env.USERID
		params.fundid = params.fund.objid 

		def data = [:]
		data.items = adb.getReport(params)
	
		if(! data.items) throw new Exception("No record(s) found.        ");


		data.info = [
			FUNDNAME 	: params.fund.title, 
			ACCOUNTNAME	: params.account ? params.account.name : env.FULLNAME,
			ACCOUNTTITLE : params.account ? params.account.title : env.JOBTITLE,
			PERIOD			: 'FOR THE MONTH OF ' + params.month.caption + ', ' + params.year, 
			FROMPERIOD	: dtSvc.format( "MMMMM dd, yyyy", data.items[0].refdate ), 
			TOPERIOD	: dtSvc.format( "MMMMM dd, yyyy", data.items[-1].refdate ) 
		]
		return data
	}

	void buildDateFilter(params){
		params.fromdate = params.year + '-' + params.month.index + '-01 00:00:00'
		params.todate   = dtSvc.format('yyyy-MM-dd', dtSvc.getMonthEndDate(dtSvc.parse('yyyy-MM-dd', params.fromdate))) + " 23:59:59"
	}

	
}
