import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;

class DepositVoucherService  {

	@Env
	def env;

	@Service("DateService")
	def dateSvc;

	@Service("SequenceService")
	def seqSvc;

	@Service('ControlService') 
	def controlSvc;	

	@Service("Var")
	def var;			

	@DataContext("collectionvoucher_fund")
	def cvfEm;

	@DataContext("depositvoucher")
	def depositEm;

	@DataContext("paymentcheck")
	def paymentCheckEm;


	@DataContext("depositslip")
	def depositSlipEm;

	@Service("JevService")
	def jevSvc;

	@ProxyMethod
	public def create( def o ) {
		def m = [:];
		m.state = "OPEN"
		m.controlno = "DV" + seqSvc.getNextFormattedSeries("DEPOSIT_VOUCHER");
		m.controldate = dateSvc.getBasicServerDate(); 
		m.createdby = [objid:env.USERID,  name:env.FULLNAME];
		m.dtcreated = dateSvc.getServerDate();
		m.fund = o.fund;
		m.fundid = o.fund.objid;
		m.amount = o.amount;
		m.amountdeposited = 0;
		m = depositEm.create( m );
		o.items.each {
			cvfEm.find( [ objid: it.objid ] ).update( [depositvoucherid: m.objid ] );
		}
		return m;
	}

}
