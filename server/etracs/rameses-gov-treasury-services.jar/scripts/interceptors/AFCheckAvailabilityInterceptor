import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;
import com.rameses.common.*
import com.rameses.services.extended.*

class AFCheckAvailabilityInterceptor {

	@ActiveDB("af_inventory")
	def af_inventory;

	@ActiveDB("stockitem")
	def stockitem;

	@After(pattern="StockInventoryService.getAvailable")
	public void getAvailability( evt ) {
		def result = evt.result;
		
		def list = result.items.findAll{ it.qtyissued > 0  };
		for(it in list ) {
			def afid = it.item.objid;
			def unit = it.unit;
			
			def qtyPerUnit = stockitem.read( [itemid: afid, unit: unit], "unit" )?.qty;
			
			if(qtyPerUnit==null)
				throw new Exception("Qty per unit not found for "+it.item.objid); 

			def qty = it.qtyissued;
			def availableList = af_inventory.findAllAvailable([ afid: afid, unit: unit ]);
			if(!availableList)
				throw new Exception("Not enough stock for af#" + afid + ' (' + unit + ')');

			def buffer = [];
			for( i in availableList ) {
				def m = [:];
				m.afid = afid;
				int counter = 0;
				m.controlid = i.controlid;
				//required info					
				m.unitqty = qtyPerUnit;
				m.itemtype = it.item.type.toUpperCase();
				m.itemclass = it.item.itemclass.toUpperCase();

				if( i.qtybalance > (qty * qtyPerUnit)  ) {
					m.qtyissued = (qty * qtyPerUnit);					
					counter = qty;
					qty = 0;
				}
				else {
					m.qtyissued = i.qtybalance;
					counter = (i.qtybalance / qtyPerUnit);
					qty -= counter;
				}
				if(i.prefix) m.prefix = i.prefix;
				if(i.suffix) m.suffix = i.suffix;
				if(i.startseries) m.startseries = i.startseries;
				if(i.endseries ) m.endseries = m.startseries + m.qtyissued - 1;
				m.startstub = i.startstub;
				m.endstub = m.startstub + counter - 1; 
				m.cost =  ( counter * i.cost )
				buffer << m;
				if(qty==0)break;
			}
			it.items = buffer;
			buildStubs( it );
			if(qty > 0 ) break;
		}
	}

	void buildStubs( o ) { 
		o.items.each{ a-> 
			def is_cashticket = (a.itemtype == 'CASHTICKET'); 
			if ( is_cashticket==true ) {
				a.sstartseries = a.sendseries = null; 
			} else {
				a.sstartseries = a.startseries;
				a.sendseries = a.endseries; 
			}

			def list = []; 
			def currentseries = a.startseries; 
			for (int i=a.startstub; i<=a.endstub; i++) {
				def m = [:]; 
				m.stubno = i; 
				m.unitqty = a.unitqty; 
				m.qty = m.qtyissued = a.unitqty; 
				m.sstartseries = m.startseries = currentseries; 
				m.sendseries = m.endseries = currentseries + m.unitqty - 1; 
				if ( is_cashticket==true ) {
					m.sstartseries = m.sendseries = null; 
				} 
				list << m; 
				currentseries = m.endseries + 1; 
			}
			a.items = list; 
		}
	}
}