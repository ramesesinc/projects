import com.rameses.annotations.*;

class AFControlListInterceptor {

	/*****************************************************************************************
	//collector
	*****************************************************************************************/
	@After(pattern="QueryService.getNodeList", eval="#{ args[0]._schemaname == 'af_control' }")
	public void getNodes( evt ) { 
		def x = evt.args[0];
		def result = evt.result; 
		result << [  title: 'Draft', state:'DRAFT' ];
		result << [  title: 'Open', state:'OPEN' ];
		result << [  title: 'Issued', state:'ISSUED' ];
		result << [  title: 'Sold', state:'SOLD' ];
		result << [  title: 'Consumed', state:'CLOSED' ];
		result << [  title: 'Cancelled', state:'CANCELLED' ];
	}

	@Before(pattern="QueryService.getList", eval="#{ args[0]._schemaname == 'af_control' }")
	public void loadList(def evt) {
		def o = evt.args[0];

		//o.debug = true;
		if( !o.node?.state ) return;

		def str = " state = :state ";
		def m = [ state: o.node.state ]; 

		if( o.where ) {
			o.where[0] = str + " AND " + o.where[0];	
			o.where[1].putAll( m );
		}
		else {
			o.where = [str, m];
		} 
	}	


}
