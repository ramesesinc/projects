import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;
import com.rameses.common.*
import com.rameses.services.extended.*

class AFIssueInterceptor { 
	
	@Service("SequenceService") 
	def seqSvc;

	@DataContext("af_control")
	def afcontrol;

	@Env
	def env;

	@Before(pattern="PersistenceService.create", eval="#{ args[0]._schemaname == 'afissue' }")
	public void beforeCreate( evt ) { 
		def o = evt.args[0];
		o.user = [objid:env.USERID, name:env.FULLNAME, title:env.JOBTITLE];
		o.org = [objid:env.ORGID, name:env.ORGNAME];
		o.receiptno = "IRAF" + seqSvc.getNextFormattedSeries("IRAF");
		o.state = "DRAFT";
	}

	@After(pattern="PersistenceService.read", eval="#{ args[0]._schemaname == 'afissue' }")
	public void beforeOpen( evt ) { 
		def result = evt.result;
		
		throw new Exception("Load here all AF")
	}
	
	


}