import com.rameses.annotations.*;

class EFTPaymentListInterceptor {


	@After(pattern="QueryService.getNodeList", eval="#{ args[0]._schemaname == 'eftpayment' }")
	public void getNodes( evt ) { 
		def x = evt.args[0];
		def result = evt.result; 
		result << [ id:'open', title: 'Open'];
		result << [ id:'closed', title: 'Closed'];
	}

	@Before(pattern="QueryService.getList", eval="#{ args[0]._schemaname == 'eftpayment' }")
	public void loadList(def evt) {
		def o = evt.args[0];

		//o.debug = true;
		/*
		if( !o.node?.id ) return;

		def str = "";
		def m = [:]

		switch(o.node.id) {
			case "unused":
				str = " amtused = 0 ";
				break;

			case "partial":
				str = " (amtused > 0) and (amtused <> amount) ";
				break;	

			case "fordeposit":
				str = " state = 'FOR-DEPOSIT' ";
				break;	

			case "undeposited":
				str = " (amtused = amount) AND (depositslipid IS NULL) ";
				break;

			case "deposited":
				str = "NOT( depositslipid IS NULL )";
				break;
		}

		if( o.where ) {
			o.where[0] = str + " AND " + o.where[0];	
			o.where[1].putAll( m );
		}
		else {
			o.where = [str, m];
		}
		*/
	}	


}
