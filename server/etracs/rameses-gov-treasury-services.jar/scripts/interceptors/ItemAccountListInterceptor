import com.rameses.annotations.*;

class ItemAccountListInterceptor {

	@Env
	def env;

	@Service("OrgService")
	def orgSvc;

	@DataContext("collectiontype_account")
	def collTypeAcct;

	@After(pattern="QueryService.getNodeList", eval="#{ args[0]._schemaname == 'itemaccount' }")
	public def getNodeList(evt) {
		def result = evt.result;
		result << [title:'DRAFT', state:'DRAFT'];
		result << [title:'ACTIVE', state:'ACTIVE'];
		result << [title:'INACTIVE', state:'INACTIVE'];
	}

	@Before(pattern="QueryService.getList", eval="#{ args[0]._schemaname == 'itemaccount' && args[0]._tag != 'CASHRECEIPT' }")
	public void loadList(def evt) {
		def o = evt.args[0];
		if( o.node?.state ) {
			def str = "state = :state";
			def m = [state : o.node.state];
			//add to first position of where
			if( o.where ) {
				o.where[0] = str + " AND " + o.where[0];	
				o.where[1].putAll( m );
			}
			else {
				o.where = [str, m];
			}
		}
	}

	@Before(pattern="QueryService.getList", eval="#{ args[0]._schemaname == 'itemaccount' && args[0]._tag == 'CASHRECEIPT' }")
	public void loadListForCashReceipt(def evt) {
		def o = evt.args[0];

		//throw new Exception( env.ORGID + " does it match with " + orgSvc.getRoot() );

		def str = "";
		def m = [:];

		//mark true if there are collectiontype accounts
		o.has_collection_account = true;

		if( o._queryFilter?.acctids ) {
			str = " objid IN ('" + o._queryFilter.acctids.join("','") + "')";
		}
		if(!str) return;

		if( o.where ) {
			o.where[0] = str + " AND " + o.where[0];	
			o.where[1].putAll( m );
		}
		else {
			o.where = [str, m];
		}
	}


	//Please include in the query
	/*
	@After(pattern="QueryService.getList", eval="#{ args[0]._schemaname == 'itemaccount' && args[0]._tag == 'CASHRECEIPT' }")
	public void loadListForCashReceipt(def evt) {
		def o = evt.args[0];
		def result = evt.result;

		if( o.has_collection_account ) {
			def acList = collTypeAcct.find( [collectiotypeid: o.collectiontype.objid ] ).list();

			result.each {
				def m = acList.find{ it.account.objid == it.objid };
				it.defaultvalue = m.defaultvalue; 
				it.valuetype = m.valuetype; 
			}
		}
	}
	*/
	

}
