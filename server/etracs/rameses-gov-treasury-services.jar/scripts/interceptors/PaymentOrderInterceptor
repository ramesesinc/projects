import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;

class PaymentOrderCashReceiptInterceptor {

	@DataContext("paymentorder")
	def svc;

	@Service("DateService")
	def dateSvc;

	@Service('OrgService')
	def orgSvc; 

	@Service("SequenceService") 
	def seqSvc;

	@Before(pattern="PersistenceService.create", eval="#{args[0]._schemaname == 'paymentorder'}")
	public def beforeCreatePaymentOrder(def evt) { 
		def r = evt.args[0];

		String locid = orgSvc.getRoot().code.replaceAll('-', '');

		r.objid =  KeyGen.generateAlphanumKey( locid.padRight( 6, "0" ), 12 );
		r.txndate = dateSvc.getServerDate();
		r.controlno =  locid.padRight( 5, "0" ) + seqSvc.getNextFormattedSeriesA("PAYORDER", 10);
		r.locationid = locid;

		def cal = Calendar.instance;
		cal.setTime( r.txndate );
		cal.add( Calendar.HOUR, 24 );
		r.expirydate = new java.sql.Timestamp( cal.getTimeInMillis() );
		if(r.txntypename==null) r.txntypename = r.txntype;
	} 


}