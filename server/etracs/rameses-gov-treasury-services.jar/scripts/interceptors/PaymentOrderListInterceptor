import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;
import com.rameses.common.*
import com.rameses.services.extended.*

class PaymentOrderListInterceptor { 
	
	@After(pattern="QueryService.getNodeList", eval="#{ args[0]._schemaname == 'paymentorder' }")
	public void getNodes( evt ) { 
		def x = evt.args[0];
		def result = evt.result; 
		result << [ id:'filipizen', title: 'Filipizen' ];
		result << [ id:'kiosk', title: 'Kiosk' ];
		result << [ id:'office', title: 'Other Offices' ];
	}

	@Before(pattern="QueryService.getList", eval="#{ args[0]._schemaname == 'paymentorder' }")
	public void loadList(def evt) {
		def o = evt.args[0];
		if( !o.node?.id ) return;
		def str = "";
		def m = [:];

		if( o.node.id.matches('filipizen|kiosk') ) {
 			str = " origin = :origin ";
			m.origin = o.node.id; 
		}
		else {
 			str = " origin NOT IN ('filipizen', 'kiosk') ";
		}
		if( o.where ) {
			o.where[0] = str + " AND " + o.where[0];	
			o.where[1].putAll( m );
		}
		else {
			o.where = [str, m];
		} 
	}	


}