import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.UID;

class FormControlService {

	@DataContext('formcontrol')
	def formcontrol;

	@DataContext('branch')
	def branch;

	@Service('DateService')
	def dateSvc;

	@ProxyMethod 
	public def getAvailable( params ) {
		def fparam = [
			branchid   : params.branchid, 
			terminalid : params.terminalid, 
			formtype   : params.formtype 
		];

		def ctrls = formcontrol.find( fparam ).where('currentseries <= endseries').orderBy('dtfiled').list(); 
		if ( ctrls ) { 
			def info = ctrls.find{ it.state=='ACTIVE' } 
			if ( !info ) throw new Exception('Your current form control is not activated. Please verify.');   

			formatSeries( info ); 
			return info;  
			
		} else {
			if ( !params.formcode ) throw new Exception('formcode parameter is required');

			def branchinfo = branch.read([ objid: params.branchid ]); 

			def rundate = dateSvc.getServerDate(); 
			def dtyear = dateSvc.getServerYear();
			def suminfo = formcontrol.select('icount:{count(*)}').find( fparam ).first(); 
			def txncount = (suminfo?.icount ? suminfo.icount : 0) + 1;
			def codeyr = dtyear.toString()[-1..2].reverse();
			def codeidx = txncount.toString().padLeft(2, '0'); 

			def info = [objid: 'FCTRL'+ new UID(), state: 'ACTIVE']; 
			info.prefix = params.formcode +'-'+ codeyr + branchinfo.code +'-'+ codeidx; 
			info.formtype = params.formtype;
			info.dtfiled = rundate; 
			info.branchid = params.branchid;
			info.terminalid = params.terminalid; 
			info.startseries = info.currentseries = 1; 
			info.endseries = 999999; 
			formcontrol.create( info ); 
			formatSeries( info ); 
			return info; 
		} 
	}

	void formatSeries( o ) {
		o.seriesno = o.prefix +'-'+ o.currentseries.toString().padLeft(6, '0'); 
	} 
} 
