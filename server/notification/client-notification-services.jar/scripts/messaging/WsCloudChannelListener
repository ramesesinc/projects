import com.rameses.annotations.*;
import com.rameses.common.*;
import com.rameses.osiris3.script.*;
import com.rameses.util.*;

class WsCloudChannelListener { 

	@Service('AsyncRequestExecutor')
	def asyncReqExecutor;

	@Service(value='CloudNotificationService') 
	def localSvc;

	@Service(value='CloudNotificationService', connection='cloud_notification') 
	def remoteSvc;

	@Service 
	def self;

	@OnMessage('ws_cloud_channel') 
	public void receive( params ) { 
		if ( params.immediate == true ) {  
			println '[WsCloudChannelListener] Received immediate message from '+ params.origin; 
			self.processImmediateMessage( params ); 

		} else { 
			println '[WsCloudChannelListener] Notified for incoming messages (status='+ params.status +')'; 
			def var = em.read([objid: 'fetch_notification'], 'setting'); 
			var.value = 'true'; 
			em.update( var, 'setting' );  
		}
	} 

	@Async 
	@ProxyMethod(local=true) 
	void processImmediateMessage( params ) { 
		asyncReqExecutor.process( params ); 
	} 
} 
