import com.rameses.annotations.*
import com.rameses.eserver.*;
import com.rameses.common.*;

class RPTPaymentOrderInterceptor
{
	@Service('RPTReceiptService')
    def receiptSvc 

    @DataContext('rptbill')
	def em_rptbill	

	@ActiveDB('cashreceiptrpt')
	def em

	@After(pattern="PaymentOrderService.fetchPaymentInfo", eval="#{result.txntype == 'rptcol'}") 
	public void fetchInfo( evt ) {
		def entity = evt.result 
		def bill = em_rptbill.find([objid:entity.refid]).first()
		def rptledger = em.findLedgerInfo([objid:entity.info.rptledgerid])
		if (!rptledger) throw new Exception('Ledger does not exist or has already been deleted.')
		receiptSvc.buildLedgerForPaymentInfo(bill, rptledger)

		def receipt = [billid:entity.refid]
		receipt.receiptdate = entity.dtposted
		receipt.rptitems = [rptledger]
		receipt.amount = entity.amount 
        entity.items = receiptSvc.getSummarizedItems(receipt)
	}

}

