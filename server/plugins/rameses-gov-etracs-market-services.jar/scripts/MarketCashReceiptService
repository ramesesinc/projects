import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;
import com.rameses.services.extended.*;
import market.facts.*;
import java.text.*;
import treasury.utils.*;
import treasury.facts.*;


public class MarketCashReceiptService  {

	@DataContext("market_account")
	def acctEm;

	@Service("MarketBillingService")
	def billingSvc;

	@Service("DateService")
	def dateSvc;

	
	@ProxyMethod
	public def getInfo(o) {
		def a = acctEm.find([acctno: o.id] ).first();
		if(!a) a = acctEm.where("unit.code =:code",[code: o.id]).first();
		if(!a) throw new Exception("Market account not found!");

		def z = [:];
		z.acctid = a.objid;
		z.acctno = a.acctno;
		z.acctname = a.acctname;
		z.rate = a.rate;
		z.extrate = a.extrate;
		z.unit = a.unit;
		z.term = a.term;
		z.payer = a.owner;
		z.paidby = a.acctname + " (" + a.acctno + ")"; 
		z.paidbyaddress = a.unit.code;

		def m = billingSvc.getBilling( [acctid: a.objid, payoption: o.payment] );
		z.items = m.items.sort{ (it.year*12)+it.month };
		z.amount = m.amount;
		return z;
	}

	


}