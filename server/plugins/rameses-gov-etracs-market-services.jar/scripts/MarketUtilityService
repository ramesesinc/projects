import com.rameses.annotations.*;

import treasury.facts.*;
import com.rameses.rules.common.*;
import treasury.utils.*;


class MarketUtilityService {
	
	@Service("AssessmentRuleService")
	def assmtSvc;

	@ProxyMethod 
	public def calculate( params ) {

		def utilityRate = new UtilityRate( type: params.txntype, usage: params.usage );

		def fb = new FactBuilder();
		fb.facts << utilityRate;

		assmtSvc.execute( "marketutility", [:], fb, null );
		if( utilityRate.rate <= 0 )
			throw new Exception("Utility rate not computed. Please check the rules");		

		return [amount:  utilityRate.rate ];
	} 	

}