import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;


public class MarketAccountInterceptor {

	@Service("SequenceService")
	def seqSvc;

	@Service("DateService")
	def dateSvc;

	@DataContext("market_rentalunit")
	def rentalunit;

	@Before( pattern="PersistenceService.create", eval="#{args[0]._schemaname == 'market_account'}")
	public void beforeCreate( evt ) {
		def o = evt.args[0];
		if(!o.acctno) {
			o.acctno = "ACCT" + seqSvc.getNextFormattedSeries( "MARKET_ACCOUNT" );
		}
	}

	@After( pattern="PersistenceService.(create|update)", eval="#{args[0]._schemaname == 'market_account'}")
	public void afterSave( evt ) {
		def o = evt.args[0];
		rentalunit.find([objid: o.unit.objid]).update([currentacctid: o.objid] );
	}


}