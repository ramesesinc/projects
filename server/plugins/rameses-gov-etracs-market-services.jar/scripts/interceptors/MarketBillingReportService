import com.rameses.annotations.*;
import java.text.*;
import com.rameses.functions.*;
import com.rameses.util.*;
import treasury.utils.*;
import treasury.facts.*;

class MarketBillingReportService {
	
	@Service("MarketBillingService")
	def billingSvc;

	@Service("DateService")
	def dateSvc;

	@DataContext("market_account")
	def acctEm;
	
	def df = new SimpleDateFormat("yyyy-MM-dd");

	/***************************************************************************************************************
	* compress items into format:  year, month, (fromday, today), rate, extrate, surcharge, interest, linetotal
	****************************************************************************************************************/
	@After(pattern="FormReportService.getData", eval="#{args[0].reportid == 'market_account_billing' }")
	public void getData( def evt ) {
		def p = evt.args[0];
		def result = evt.result;
		result.status = 0;

		def acctid = p.parameters.acctid;
		def acct = acctEm.find([objid: acctid]).first();
		def pp = [acctid: acctid ];
		pp.billdate = (p.parameters.billdate) ? df.parse(p.parameters.billdate) : dateSvc.getServerDate();
		pp.filters = p.parameters.filters;

		def m = billingSvc.getBilling( pp );
		if( !m.items )
			throw new Exception("No billitems found!");

		acct.items = m.billitems;
		acct.fromdate = m.fromdate;
		acct.todate = m.todate;
		acct.duedate = m.duedate;
		acct.grandtotal = acct.items.sum{ it.total};
		acct.billdate = pp.billdate;
		acct.ratetype = m.ratetype;
		
		//the purpose of this is for the reports
		acct.hasitems = (acct.items) ? true : false;
		result.data = acct;
	}


}