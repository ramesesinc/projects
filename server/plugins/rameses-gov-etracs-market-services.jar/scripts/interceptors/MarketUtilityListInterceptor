import com.rameses.annotations.*;

class MarketUtiltityListInterceptor{
	
	@After(pattern="QueryService.getNodeList", eval="#{args[0]._schemaname.matches('market_electricity|market_water') }")
	public void getAcctNodeList(def evt) {
		def result = evt.result;
		result << [ title: 'Active', id:'ACTIVE'];
		result << [ title: 'For Reading', id:'FORREADING'];
		result << [ title: 'Closed', id:'CLOSED'];
	}

	@Before(pattern="QueryService.getList", eval="#{args[0]._schemaname.matches('market_electricity|market_water')  }")
	public void loadList(def evt) {
		def o = evt.args[0];
		if( !o.node?.id ) return;

		def str = "";
		def m = [:];

		
		if ( o.node.id == 'FORREADING' ) {
			str = " nextreadingdate <= NOW() and state = 'ACTIVE' ";
		} else if ( o.node.id == 'ACTIVE' ) {
			str = " nextreadingdate > NOW() and state = 'ACTIVE' "; 
		} else {
			str = " state = 'CLOSED' "; 
		}
	
		//add to first position of where
		if( o.where ) {
			o.where[0] = str + " AND " + o.where[0];	
			o.where[1].putAll( m );
		}
		else {
			o.where = [str, m];
		}
	}

}