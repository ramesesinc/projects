import com.rameses.annotations.*; 

class OboApplicationInterceptor { 

	@Service("DateService")
	def dateSvc;

	@Service("SequenceService")
	def seqSvc;

	@Service("WorkflowTaskService")
	def taskSvc;

	@DataContext("obo_application")
	def appEm;

	@DataContext("faas")
	def faasEm;


	@Before(pattern="PersistenceService.create", eval="#{args[0]._schemaname == 'obo_application' }") 
	public void beforeStartWorkflow( def evt ) {
		def o = evt.args[0];		
		o.appno = "OB" + seqSvc.getNextFormattedSeries( 'OBOAPP');
		o.appdate = dateSvc.getServerDate();
	} 

	@After(pattern="PersistenceService.create", eval="#{args[0]._schemaname == 'obo_application' }") 
	public void afterCreateStartWorkflow( def evt ) {
		def o = evt.args[0];
		def p = [:];
		p.processname = 'obo_application'; 
		p.refid = o.objid;
		p.startdate = dateSvc.serverDate;
		taskSvc.start(p);		
	} 

	@After(pattern="WorkflowTaskService.(start|signal)", eval="#{ args[0].processname=='obo_application' }", index=100)
	public void afterWorkflowStartAndSignal( def evt ) {
		def p = evt.args[0];
		def task = evt.result;
		appEm.find([objid: p.refid]).update([taskid: task.taskid]);
	}

	@After(pattern="PersistenceService.read", eval="#{ args[0]._schemaname=='obo_application' }")
	public void afterRead( def evt ) {
		def entity = evt.result; 
		if(faasEm!=null && entity.rptinfo?.objid!=null) {
			entity.rptinfo = faasEm.select("objid,fullpin,tdno").find([objid: entity.rptinfo.objid]).first();
		}
	}


} 