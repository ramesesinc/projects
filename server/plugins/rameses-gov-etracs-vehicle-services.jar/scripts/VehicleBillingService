import com.rameses.annotations.*;

import com.rameses.rules.common.*;
import vrs.facts.*;
import rules.treasury.facts.*;


/**********************************************************
* This service handles computation of what fees to charge 
***********************************************************/
class VehicleBillingService {
	
	@Service("RuleExecutorService")
	def ruleSvc;

	@Service("DateService")
	def dateSvc;

	@ProxyMethod
	public def process( def o ) {
		if(!o.billitems) {
			throw new Exception("VehicleBillingService requires billitems");
		}
			
		def dt = dateSvc.getServerDate();
		def facts = [];
		facts << new BillDate(dt);
		facts << new CurrentDate(dt);
		o.billitems.each {
			def acct = new Account( objid: it.item.objid , title: it.item.title );
			facts << new BillItem( account: acct, amount: it.amount);
		};
		
		def ctx = new RuleExecutionContext(facts);
		ctx.result.billitems = o.billitems;
		def res = ruleSvc.execute( "vehiclebilling", facts, null, null );
		return res.billitems;
	}

}