import com.rameses.annotations.*;
import java.rmi.server.UID;

class VehiclePermitService {
	
	@Env
	def env;	

	@DataContext('vehicle_permit') 
	def vperm_db; 

	@DataContext("vehicle_application") 
	def appEm;

 	@DataContext("vehicle_franchise") 
	def franchiseEm;

	@Service("DateService")
	def dateSvc;	

	@Service("BillingRuleService")
	def billRuleSvc;

	@Service("VehicleControlNoService")
	def controlNoSvc;

	@DataContext("vehicletype")
	def vehicleTypeEm;

	@ProxyMethod 
	public def create( params ) { 
		if ( params.app == null ) params.app = [:]; 

		def appid = params.app.objid; 

		if ( !appid ) throw new Exception('Please provide an appid'); 

		def app = appEm.find([ objid: appid ]).first(); 
		if ( app.permitid ) throw new Exception('There is already a permit issued to this application'); 

		def rundate = dateSvc.getServerDate(); 

		def p = [application: app ];
		def r = billRuleSvc.execute( [rulename:'vehicledates', params: p ] );

		def permit = [:];
		permit.objid = "VPERM"+ new UID();
		permit.app = app; 
		permit.state = 'ACTIVE';
		permit.activeyear = app.appyear;
		permit.controlid = app.controlid;
		permit.issuedby = [objid: env.USERID, name: env.FULLNAME];

		if(params.permittype ) {
			permit.permittype = params.permittype;
		}
		else {
			permit.permittype = 'STANDARD';
		}
		if( params.dtissued )  {
			permit.dtissued = params.dtissued;		
		}
		else {
			permit.dtissued = rundate;
		}
		if(params.permitno) {
			permit.permitno = params.permitno;
		}
		else {
			//generate the permit number
			def vt = vehicleTypeEm.find( [objid: entity.vehicletypeid ] ).first();
			if( !vt.permitnopattern )
				throw new Exception("Please specify permitno pattern in type " + entity.vehicletypeid );

			//get the franchise to get the cluster
			def c = franchiseEm.find( [objid: app.controlid ] ).first();
			def cluster = c.cluster;

			def pp = [pattern: vt.permitnopattern, cluster: cluster ];
			entity.permitno =  controlNoSvc.formatNextNo( pp );
		};
		permit.expirydate = r.expirydate;
		permit = vperm_db.create( permit );

		appEm.find( [objid: app.objid] ).update( [permitid: permit.objid]);
		return permit; 
	}

}