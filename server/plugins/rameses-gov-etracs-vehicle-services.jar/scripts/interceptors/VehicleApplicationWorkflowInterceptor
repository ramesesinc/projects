import com.rameses.annotations.*;
import java.rmi.server.UID;

class VehicleApplicationWorkflowInterceptor {
	
	@DataContext("vehicle_application")
	def appEm;

	@DataContext("vehicle_franchise")
	def franchiseEm;

	@Service("DateService")
	def dateSvc;

	@After(pattern="WorkflowTaskService.signal", 
		eval="#{args[0].processname.startsWith('vehicle_application_') && args[0].action == 'release' }" )
	public void beforeRelease(def evt) {
		def o = evt.args[0];
		def app = appEm.find([objid: o.refid]).first();
		if(!app) {
			throw new Exception("Cannot Release. Application not found with refid " + o.refid);
		}
		def d = [state:'ACTIVE'];
		if( app.apptype == 'NEW' ) {
			d.dtregistered = dateSvc.getServerDate();
		} else if ( app.apptype=='DROP' ) {
			d.state = 'OPEN'; 
			d.appid = null; 
		}
		franchiseEm.find( [objid: app.controlid] ).update( d );
	}	


}