import com.rameses.annotations.*; 

class WaterworksBillDispatcherReceiptService { 
	
	@DataContext('waterworks_batch_billing') 
	def batch_db; 

	@DataContext('vw_waterworks_billing') 
	def batchItem_db; 

	@ProxyMethod
	public def formatReport( def o ) { 
		return []; 
	} 

	@ProxyMethod 
	def process( param ) { 
		if ( !param.batchid ) 
			throw new Exception("batchid is reqiuired in WaterworksBillDispatcherReceiptService.process "); 

		def data = batch_db.find([ objid: param.batchid ]).first();  
		if ( !data ) throw new Exception('batch billing record not found'); 

		data.items = batchItem_db.find([ batchid: param.batchid ]).select('acctno,acctname').orderBy('acctno').list();  
		if ( !data.items ) throw new Exception('No available items for this batch bill transaction'); 

		def res = self.formatReport( data );
		//if ( !plist ) throw new Exception("WaterworksBatchBillPrintingService.process error! Please override WaterworksBatchBillPrintingService.process @After");
		return null; 
	} 

} 