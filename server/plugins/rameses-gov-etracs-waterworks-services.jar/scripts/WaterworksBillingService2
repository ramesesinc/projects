import com.rameses.annotations.*;

import com.rameses.rules.common.*;
import waterworks.facts.*;
import treasury.facts.*;
import com.rameses.functions.*;

class WaterworksBillingService2  {
	
	@DataContext("waterworks_account")
	def acct;

	@DataContext("waterworks_account_ledger")
	def ledger;

	@DataContext("waterworks_account_consumption")
	def consumption;

	@ProxyMethod
	public def getBilling( def o ) {
		def m = null;
		if(o.acctid) {
			m = acct.find( [objid: o.acctid] ).first();
		}

		if(!m) throw new Exception("WaterworksBillingService.getBilling error. Account not found");

		def cons = consumption.select("year,month,volume").find([acctid: m.objid]).list();

		def items = ledger.find([parentid: m.objid]).orderBy("year,month").list();

		items.each { x->
			x.consumption = cons.find{ it.year == x.year && it.month == x.month };
		}	

		m.items = items;
		return m;
	}

}