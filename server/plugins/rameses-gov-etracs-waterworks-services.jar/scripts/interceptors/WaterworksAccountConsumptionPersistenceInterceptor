import com.rameses.annotations.*;

class WaterworksAccountConsumptionPersistenceInterceptor{
	
	@DataContext("waterworks_meter")
	def meterEm; 

	@After(pattern="PersistenceService.create", eval="#{args[0]._schemaname == 'waterworks_consumption'}")
	public void afterCreate( evt ) {
		def zz = evt.args[0];
		if( zz.meter?.objid ) {
			meterEm.find( [objid:zz.meter.objid ]).update( [lastreading: zz.reading, lastreadingdate: zz.readingdate] );
		}
	}

	@Before(pattern="PersistenceService.removeEntity", eval="#{args[0]._schemaname == 'waterworks_consumption'}")
	public void beforeRemove( evt ) {
		def zz = evt.args[0];
		if( zz.amtpaid > 0 )
			throw new Exception("Cannot delete consumption since payment was already made");
	}

}