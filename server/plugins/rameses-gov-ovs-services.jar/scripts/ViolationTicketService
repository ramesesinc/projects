import com.rameses.annotations.*;

class ViolationTicketService {

	@DataContext("ovs_violation_ticket_entry")
	def ove;

    @Service("RuleExecutorService")
    def ruleSvc;

	@ProxyMethod
	public def getViolationInfo(def o){
		if( !o.violationid ) throw new Exception("Violation id is required");
		if( !o.violatorid ) throw new Exception("Violator id is required");
		//ove.debug = true;
		//def z = ove.find( [violationid: o.violationid, 'parent.violator.objid': o.violatorid] ).select( 'violationcount:{COUNT(*)}' ).first(); 

        //def facts = [];
        //facts << new ViolationTicket( violationid: o.violationid, violationcount: z.  )
        //ruleSvc.execute( "ovscomputation", def facts, def actions, null )

		def z = [:];
		z.violationcount = 1;
		z.violationtext = getViolationText( z.violationcount );
		z.amount = 100;
		z.amtpaid = 0;
		return z;
	}
	
	String getViolationText(int i){
        def prefix;
        def s = String.valueOf(i);
        def n = Integer.parseInt(s.charAt(s.length() - 1).toString());
        if(i % 100 == 11 || i % 100 == 12 || i % 100 == 13){
            prefix = s + "th";
        }else{
            if(n == 1){
                prefix = s + "st";
            }else if(n == 2){
                prefix = s + "nd";
            }else if(n == 3){
                prefix = s + "rd";
            }else{
                prefix = s + "th";
            }
        }
        return prefix + " Violation";
   }      

}