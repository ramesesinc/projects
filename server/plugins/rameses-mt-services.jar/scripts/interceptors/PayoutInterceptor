import com.rameses.annotations.*;
import com.rameses.util.*;

class PayoutInterceptor {
	
	@DataContext('sendout') 
	def sendout;

	@DataContext('sendout_unclaim') 
	def sendout_unclaim;

	@DataContext('payout') 
	def payout;

	@DataContext('formcontrol') 
	def formcontrol;

	@After( pattern="PayoutService.init", eval="#{args[0].handler=='default-payout'}" ) 
	void init( evt ) { 
		def params = evt.args[0]; 
		def soutdata = sendout.read([ objid: params.sendoutid ]); 
		if ( soutdata ) { 
			def result = evt.result; 
			result.sendout = soutdata;
		} 
	} 

	@After( pattern="PayoutService.submit", eval="#{args[0].handler=='default-payout'}" ) 
	void submit( evt ) { 
		def result = evt.result; 
		sendout_unclaim.find(['objid': result.sendout.objid ]).delete(); 
		payout.create( result ); 

		def ctrl = formcontrol.find([ objid: result.controlid ]).first();
		formcontrol.find([ objid: ctrl.objid ]).update([ currentseries: ctrl.currentseries+1 ]);  
	} 

}