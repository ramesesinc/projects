import com.rameses.annotations.*;
import com.rameses.common.*;
import com.rameses.util.*;

class QueueGroupService { 

	@DataContext(value='queue_group', adapter='queue') 
	def qg; 

	@DataContext(value='queue_section', adapter='queue') 
	def qs; 

	@ProxyMethod 
	public def open( objid ) {
		return qg.find([ objid: objid]).first(); 
	} 	

	@ProxyMethod 
	public def getGroups() {
		return qg.list(); 
	} 

	@ProxyMethod 
	public def getGroupsWithSections() {
		def list = qg.list(); 
		list.each {
			it.sections = getSections( it.objid );
		}
	} 

	@ProxyMethod 
	public def getSections( groupid ) {
		println groupid;
		if ( !groupid ) throw new Exception('groupid parameter is required'); 

		return qs.find([ groupid: groupid ]).list(); 
	} 

	@ProxyMethod 
	public def getSectionCounters( sectionid ) {
		if ( !sectionid ) throw new Exception('sectionid parameter is required'); 

		return qg.getSectionCounters([ sectionid: sectionid ]); 
	} 
} 