import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;
import com.rameses.common.*;
import com.rameses.services.extended.*;

class WaterworksAreaService {
	
	@DataContext("waterworks_area")
	def wa;

	def getColumns(params){
		return [
			[name:'name', caption:'Area'],
			[name:'description', caption:'Description'],
			[name: 'assignee.name', caption: 'Assign To']
		];
	}

	@ProxyMethod
	public def getListByAssignee( def o ) {
		if(!o.userid) 
			throw new Exception("userid is required in WaterworksAreaService.getList");
		wa.debug = true;
		wa.select("objid,name,description");
		wa.find(['assignee_objid': o.userid]);	
		return wa.list();
	}

	@ProxyMethod
	public def getList(def o){
		return wa.list();
	}

	@ProxyMethod
	public def open(def o){
		def data = wa.find([objid:o.objid]).first();
		println data;
		return data;
	}

	@ProxyMethod
	public def create(def o){
		wa.create(o);
	}

	@ProxyMethod
	public def update(def o){
		return wa.find([objid:o.objid]).update(o);
	}

	@ProxyMethod
	public void removeEntity(def o){
		 wa.find([objid:o.objid]).delete();
	}

}