import com.rameses.annotations.*;
import com.rameses.functions.*;

class WaterworksBillingReportService {
	
	@DataContext('waterworks_account')
	def waterworks_account; 

	@DataContext('waterworks_account_consumption')
	def consumption; 

	@DataContext('waterworks_application')
	def wapp; 	

	@Service("DateService")
	def dateSvc;

	@Service("WaterworksBillingService")
	def billingSvc;

	@ProxyMethod 
	public def getReport( params ) {
		def months = dateSvc.getMonths()*.name;
		def m = waterworks_account.find([objid: params.objid]).first();
		m.barcode = '515030:'+m.acctno;
		m.printdate = dateSvc.getServerDate();

		m.consumption = consumption.find([acctid: m.objid]).select("month,date:{dtreading},reading,consumption:{volume}").orderBy("year,month").list();
		m.consumption.each {
			it.month = months[it.month-1];
		}

		if( m.consumption ) {
			m.chartdata = m.consumption.collect{ [month:it.month, consumption:it.consumption] }
			m.averageconsumption = (int) (m.consumption.sum{it.consumption} / m.consumption.size());
		}
		else {
			m.chartdata = [];
			m.averageconsumption = 0;
		}

		m.billingdetails = []; 
		def list = billingSvc.getBilling([acctid: params.objid]);
		list.each {
			m.billingdetails << [ account:it.item?.title +  ((it.remarks)?'('+it.remarks+')':''), amount: it.amount ] 
		}

		def sigobj = wapp.find([ acctid: m.objid ]).select('signature').first(); 
		m.signature = sigobj?.signature; 		
		return m;
	}
}