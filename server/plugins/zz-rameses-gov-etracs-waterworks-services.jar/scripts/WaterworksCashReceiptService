import com.rameses.annotations.*;
import com.rameses.rules.common.*;

class WaterworksCashReceiptService  {
	
	@Service('WaterworksBillingService')
	def billingService;

	@DataContext('waterworks_application')
	def waterworks_application;

	@DataContext('waterworks_account')
	def waterworks_account;

	@DataContext("collectiontype")
	def collectionType;

	@DataContext("itemaccount")
	def itemaccount;


	@ProxyMethod 
	public def getBilling( params ) { 
		def refno = params.refno; 
		def parm = [:];
		def acct = waterworks_account.find([ acctno: refno ]).first(); 
		if( acct ) {
			parm.acctid = acct.objid;
		}
		else {
			acct = waterworks_application.find([ appno: refno ]).first(); 
			if ( !acct ) throw new Exception('Reference number not found'); 
			parm.applicationid = acct.objid;
		} 

		def p = [:];
		p.collectiontype = collectionType.find([barcodekey:'51030']).first();
		p.paidby = acct.acctname; 
		p.paidbyaddress = acct.address?.text; 
		p.payer = acct.owner; 
		p.items = [];
		p.billitems = [];

		def list = billingService.getBilling( parm );
		if ( !list ) throw new Exception('No unpaid balance for this account'); 
		p.items.addAll(list);
		p.amount = p.items.sum{ it.amount }
		p.billitems.addAll( list ); 
		p.info = parm; 

		if(parm.applicationid) p.applicationid = parm.applicationid;
		if(parm.acctid) p.acctid = parm.acctid;

		return p;
	}

}
