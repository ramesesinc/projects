import com.rameses.annotations.*;

class WaterworksStuboutService {
	
    @Service('QueryService')
    def querySvc; 

    @Service('PersistenceService')
    def persistenceSvc; 

    @DataContext('vw_waterworks_stubout_account') 
    def vw_waterworks_stubout_account; 

    @DataContext('waterworks_account') 
    def waterworks_account; 

    @ProxyMethod 
    public List getAccounts( params ) { 
    	if (!params.stuboutid) throw new Exception('stuboutid parameter is required'); 

    	return vw_waterworks_stubout_account.find([ stuboutid: params.stuboutid ])
    										.orderBy('stuboutindex')
    										.list();
    }

	@ProxyMethod 
    public void changeIndexNo( params ) {
    	if (!params.stuboutid) throw new Exception('stuboutid parameter is required'); 
        if (!params.stuboutindex) throw new Exception('stuboutindex parameter is required'); 
    	if (!params.accountid) throw new Exception('accountid parameter is required'); 
    	
    	def m = [ stuboutid: params.stuboutid, objid: params.accountid ]; 
    	def rec = waterworks_account.find( m ).select('objid,stuboutindex').first(); 
        if ( rec ) { 
            waterworks_account.find([ objid: rec.objid ]).update([ stuboutindex: params.stuboutindex ]); 
        } else {
            throw new Exception('Account does not exist'); 
        } 
    }        
}