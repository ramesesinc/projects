import com.rameses.annotations.*;

class WaterworksAccountPersistenceInterceptor{
	
	@DataContext("waterworks_meter")
	def wm;

	@DataContext("waterworks_account_consumption")
	def wac;

	@Service("SequenceService")
	def seqSvc;

	@Service("DateService")
	def dateSvc;

	@Before(pattern="PersistenceService.create", eval="#{args[0]._schemaname == 'waterworks_account'}")
	public void beforeCreate(def evt) {
		def o  = evt.args[0];
		if(o.lastreading < o.prevreading) 
            throw new Exception('Last Reading must be greater than Prev. Reading!');

        if( !o.acctno ) {
        	def prefix = "WACC" + dateSvc.getServerYear();
        	o.acctno = prefix  + seqSvc.getNextFormattedSeriesA( prefix, 5 );
        }    
	}

	@After(pattern="PersistenceService.create", eval="#{args[0]._schemaname == 'waterworks_account'}")
	public void afterCreate(def evt) {
		def o = evt.result;

		//update the meter information
		wm.find([objid:o.meter.objid]).update([currentacctid:o.objid]);
	}

}