import com.rameses.annotations.*;

class WaterworksApplicationPersistenceInterceptor{
	
	@DataContext("waterworks_account")
	def waterworks_account;	

	@DataContext("waterworks_account_ledger")
	def waterworks_account_ledger;

	@Service("SequenceService")
	def seqSvc;

	@Service("DateService")
	def dateSvc;

	@Service("WorkflowTaskService")
	def workflowTaskSvc;

	@Before(pattern="PersistenceService.create", eval="#{args[0]._schemaname == 'waterworks_application'}")
	public void beforeCreate(def evt) {
		def o  = evt.args[0];
		o.appno = 'WA'+seqSvc.getNextFormattedSeriesA('water_application', 6);
		o.account.acctno = 'TMP-'+ o.appno; 
		o.account.state = 'PENDING';
		o.dtfiled  = dateSvc.getServerDate();
		def z = waterworks_account.create( o.account );
		o.acctid = z.objid; 
	}

	@After(pattern="PersistenceService.create", eval="#{args[0]._schemaname == 'waterworks_application'}")
	public void afterCreate(def evt) {
		def o = evt.result;
		def p = evt.args[0]; 
		p.items.each{
			it.parentid = o.objid; 
			it.amtpaid = 0;
			waterworks_account_ledger.create( it );
		}
		workflowTaskSvc.start( [refid:o.objid, processname: 'waterworks_application' ] );
	}


}