import com.rameses.annotations.*;
import java.rmi.server.*;

class WaterworksApplicationTaskInterceptor{
	
	@DataContext("waterworks_installment")
	def inst;

	@DataContext("waterworks_application_fee")
	def appFee;

	@Service("DateService")
	def dateSvc;

	@Env
	def env;

	@Before(pattern="WorkflowTaskService.signal", eval="#{args[0].processname == 'waterworks_application' && args[0].to=='for-payment'}", index=1)
	public void beforeSignalForPayment(def evt) {
		def t = evt.args[0];

		def d = t.data;
		def m = [:];
		m.dtfiled = dateSvc.getServerDate();
		m.controlno = "BMI-"+new UID();
		m.state = 'OPEN';
		m.doctype = 'BOM';
		m.account = d.account;
		m.particulars = d.particulars;
		m.amount = d.amount;
		m.amtpaid = 0;
		m.amortization = d.amortization;
		m.term = d.term;

		m = inst.create( m );

		//also add the materials in the application fees
		def z = [:];
		z.parentid = t.refid;
		z.item = d.account;
		z.remarks = "Term: " + d.term;
		z.txntype = m.doctype;
		z.amount = d.amount;
		z.amtpaid = 0;
		z.installmentid = m.objid;		
		appFee.create( z );
	}



}