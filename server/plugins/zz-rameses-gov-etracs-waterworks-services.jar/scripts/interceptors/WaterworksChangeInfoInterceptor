import com.rameses.annotations.*;

class WaterworksChangeInfoInterceptor {

	@DataContext('waterworks_account') 
	def wacct; 

	@DataContext('waterworks_meter') 
	def wmeter; 

	@DataContext('waterworks_stubout_node') 
	def wstuboutnode;

	@Before( pattern="ChangeInfoService.update", eval="#{args[0].info._schemaname=='waterworks_account' && args[0].info.stuboutnode != null}" ) 
	public void beforeUpdateStubout( evt ) {
		def info = evt.args[0].info;
		info.stuboutnodeid = info.stuboutnode?.objid; 
		if ( !info.stuboutnodeid ) throw new Exception('Please specify stubout node'); 

		wstuboutnode.find([ acctid: info.objid ]).update([ acctid:'{null}' ]); 
	} 

	@After( pattern="ChangeInfoService.update", eval="#{args[0].info._schemaname=='waterworks_account' && args[0].info.stuboutnodeid != null}" ) 
	public void afterUpdateStubout( evt ) {
		def info = evt.args[0].info; 
		def node = wstuboutnode.find([ objid: info.stuboutnodeid ]).first();
		if ( !node ) throw new Exception('Stubout node does not exist');

		wstuboutnode.find([ objid: info.stuboutnodeid ]).update([ acctid: info.objid ]); 
	} 

	@Before( pattern="ChangeInfoService.update", eval="#{args[0].info._schemaname=='waterworks_account' && args[0].info.meter != null}" ) 
	public void beforeUpdateMeter( evt ) {
		def info = evt.args[0].info;
		if ( !info.meter?.objid ) throw new Exception('Please specify meter'); 
		
		info.meterid = info.meter.objid; 
		info.remove('meter'); 

		def o = wacct.select('meterid').find([ objid: info.objid ]).first(); 
		wmeter.find([ objid: o.meterid ]).update([ currentacctid:'{null}']); 
	} 

	@After( pattern="ChangeInfoService.update", eval="#{args[0].info._schemaname=='waterworks_account' && args[0].info.meterid != null}" ) 
	public void afterUpdateMeter( evt ) {
		def info = evt.args[0].info;
		wmeter.find([ objid: info.meterid ]).update([ currentacctid: info.objid ]); 
	} 

}