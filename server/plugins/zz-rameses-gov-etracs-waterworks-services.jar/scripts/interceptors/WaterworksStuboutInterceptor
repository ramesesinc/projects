import com.rameses.annotations.*;

class WaterworksStuboutInterceptor {

	@DataContext('waterworks_stubout_account')
	def waterworks_stubout_account;

	@Before(pattern="PersistenceService.removeEntity", eval="#{args[0]._schemaname == 'waterworks_stubout_account'}")
	public void beforeRemoveEntity( evt) {
		def params = evt.args[0];
		def o = waterworks_stubout_account.find([ objid: params.objid ]).first(); 
		if ( o ) {
			int sortorder = o.sortorder; 
			waterworks_stubout_account.find([ parentid: o.parentid ])
									  .where('sortorder > :sortorder', [sortorder: sortorder])
									  .update([sortorder:'{sortorder-1}']); 
		}
	}	

	@Before(pattern="PersistenceService.update", eval="#{args[0]._schemaname=='waterworks_stubout_account' && args[0]._tag=='moveup'}")
	public void moveUp( evt) {
		def params = evt.args[0];
		def o = waterworks_stubout_account.find([ objid: params.objid ]).select('parentid').first(); 
		if ( o ) {
			waterworks_stubout_account.find([ parentid: o.parentid, sortorder: params.sortorder ])
									  .update([sortorder:'{sortorder+1}']); 
		}
	}	

	@Before(pattern="PersistenceService.update", eval="#{args[0]._schemaname=='waterworks_stubout_account' && args[0]._tag=='movedown'}")
	public void moveDown( evt) {
		def params = evt.args[0];
		def o = waterworks_stubout_account.find([ objid: params.objid ]).select('parentid').first(); 
		if ( o ) {
			waterworks_stubout_account.find([ parentid: o.parentid, sortorder: params.sortorder ])
									  .update([sortorder:'{sortorder-1}']); 
		}
	}	

	@Before(pattern="PersistenceService.update", eval="#{args[0]._schemaname=='waterworks_stubout_account' && args[0]._tag=='swap'}")
	public void swap( evt ) {
		def params = evt.args[0];
		def o = waterworks_stubout_account.find([ objid: params.objid ]).select('parentid,sortorder').first(); 
		if ( o ) {
			waterworks_stubout_account.find([ parentid: o.parentid, sortorder: params.sortorder ])
									  .update([sortorder: o.sortorder]); 
		}

		throw new Exception('unsupported at this time');
	}		
}