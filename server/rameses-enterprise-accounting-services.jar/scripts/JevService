import com.rameses.annotations.*;
import com.rameses.common.*
import com.rameses.util.*;

class JevService  {

	@DataContext('jev') 
	def jevEm;

	@DataContext(dynamic=true)
	def em;

	@Service("DateService")
	def dateSvc;

	/*
    * This will be per fund and posted one by one 
	*/
	@ProxyMethod 
	public void createBatch( def o ) { 
		if(!o.ref) throw new Exception("ref is required");
		if(!o.funds) throw new Exception("funds is required");
		if(!o.items) throw new Exception("items is required");


		def vdr = o.items.sum{it.dr};
		def vcr = o.items.sum{it.cr}
		//check firsty if total dr will equal total cr
		if( vdr != vcr  )
			throw new Exception("Total DR " + vdr + " must equal total CR " + vcr);

		def dtposted = dateSvc.getServerDate();

		def ref = o.ref;
		def itemGroups = o.items.groupBy{ it.fundid };
		o.funds.each {
			def fundid = it.fund.objid;
			def jev = [:];
			jev.refid = ref.refid;
			jev.refno = ref.refno;
			jev.jevdate = ref.refdate;
			jev.reftype = ref.reftype;
			jev.txntype = ref.txntype;
			jev.postedby = ref.postedby;
			jev.dtposted = dtposted;
			jev.amount = it.amount;
			jev.fundid = fundid;
			jev.items = itemGroups.get( fundid );

			if( !jev.items ) throw new Exception("No jev items found in posting with fund " + jev.jevno );
			//check it jev items is balanced
			def dr = jev.items.sum{it.dr};
			def cr = jev.items.sum{it.cr};
			if( jev.items.sum{it.dr} != jev.items.sum{it.cr} )
				throw new Exception("Total DR " + dr +   " and Total CR " + cr + " must be equal per fund");
			//if( jev.items.sum{ it.dr } != jev.amount )
			//	throw new Exception("Total DR must equal to amount per fund");
			create( jev );
		}
		throw new Exception("This has passed here");
	}	

	@ProxyMethod 
	public def create( def o ) { 

		def emMap = [:];
		def emLookup = { name ->
			if( !emMap.containsKey(name)) {
				emMap.put( name, em.lookup( name));
			}
			return emMap.get(name);
		}

		def j = jevEm.create( o );
		o.items.each {
			it.jevid = j.objid;
			def db = emLookup( it._schemaname );
			db.create( it );
		}
	}

}
