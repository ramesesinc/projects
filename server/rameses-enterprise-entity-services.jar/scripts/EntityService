import com.rameses.annotations.*
import com.rameses.common.*
import java.rmi.server.UID;
import com.rameses.util.*;
import com.rameses.io.*;

class EntityService 
{
	@DataContext("entity")
	def	em; 

	@Service('PersistenceService')
	def persistenceSvc;	

	@Service 
	def self; 

	@ProxyMethod
	public def open( o ) { 
		def type = em.select('type').find([ objid: o.objid ]).val(); 
		if (!type || type == 'null') type = o.type 
		o._schemaname = 'entity' + type?.toString().toLowerCase();
		return persistenceSvc.read( o ); 
	} 

	@ProxyMethod
	public def save( o ) { 
		o._schemaname = 'entity' + o.type.toString().toLowerCase(); 
		return persistenceSvc.save( o ); 
	} 

	@ProxyMethod 
	public def getTypes() {
		return []; 
	}

	@ProxyMethod 
	public def getPhoto( o ) {
		return [:]; 
	}

	@ProxyMethod(local=true) 
	public def getMedia( params ) {
		def result = self.getPhoto( params );  
		def o = result.photo; 
		if ( o instanceof String ) {
			def base64 = new Base64Cipher(); 
            if ( base64.isEncoded( o )) {
                o = base64.decode( o ); 
            }
		}

		if ( o ) {
			def mf = new MediaFile(); 
			mf.setContentType('image/jpeg');  
			mf.setContent( o );  
			return mf; 
			
		} else {
			return null; 
		} 
	} 
}
