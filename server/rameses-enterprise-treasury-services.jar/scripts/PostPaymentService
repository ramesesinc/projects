import com.rameses.annotations.*;
import com.rameses.util.*;
import com.rameses.common.*
import com.rameses.services.extended.*
import java.rmi.server.UID;

class PostPaymentService {

	@DataContext(dynamic=true)
	def em;

	@ProxyMethod
	public def post(def o) {
		if(!o._schemaname) throw new Exception("_schemaname is required");
		
		def pmtEm = em.lookup( o._schemaname );
		pmtEm.create( o );

		//load each item
		if(o.items) {
			o.items.findAll{ it.ledgertype!=null && it.ledgerid!=null }.each {
				def ledgerEm = em.lookup( it.ledgertype );
				ledgerEm.find( [objid: it.ledgerid ] ).update( [amtpaid:'{amtpaid + :apaid}'], [apaid: it.amount] );	
			}
		}
		return o;
	}	



}