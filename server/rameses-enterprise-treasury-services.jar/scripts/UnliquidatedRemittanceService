import com.rameses.annotations.*;

class UnliquidatedRemittanceService {
	
	@ActiveDB("unliquidated_remittance")
	def em; 

	@Env
	def env;

	@ProxyMethod
	public def getNodes() {
		return [  
			[name:'pending', title: 'Pending', state:'OPEN'],
			[name:'forliquidation', title: 'For Liquidation', state:'APPROVED'],
			[name:'onhold', title: 'On Hold', state:'HOLD'],
		];
	}

	@ProxyMethod
	public def getList( o ) {
		if ( o == null ) o = [:];
		if ( !o.state ) o.state = 'OPEN'; 

		def p = [ userid: env.USERID, state:o?.state, filter:" AND r.txnmode <> 'CAPTURE'" ]; 
		if ( o.capturemode == true ) p.filter = " AND r.txnmode = 'CAPTURE'"; 

		def e = [amount: 0.0, totalcash: 0.0, totalnoncash: 0.0];
		e.remittances = em.getList( p); 
		e.remittances.each { 
			e.amount += (it.amount ? it.amount: 0.0);
			e.totalcash += (it.totalcash ? it.totalcash: 0.0);
			e.totalnoncash += (it.totalnoncash ? it.totalnoncash: 0.0); 
		} 
		return e; 
	} 
}