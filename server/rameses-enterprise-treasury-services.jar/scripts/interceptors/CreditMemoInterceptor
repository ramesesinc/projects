import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;
import com.rameses.common.*
import com.rameses.services.extended.*

class CreditMemoInterceptor { 
	
	@Env
	def env

	@Service("SequenceService")
	def seqSvc;

	@Service("DateService")
	def dateSvc; 

	@Before(pattern="PersistenceService.create", eval="#{args[0]._schemaname == 'creditmemo' }", index=0)
	public void updateStateForPosting( def evt ) { 
		def o = evt.args[0];
		o.state = 'OPEN';
		o.controlno = 'CR' + seqSvc.getNextFormattedSeries('CR');
		o.issuedby = [objid: env.USERID, name:env.FULLNAME];
		o.dtissued = dateSvc.getServerDate();		
	}	

	/*
	@After(pattern="CreditMemoService.create", eval="#{args[0].type.issuereceipt == 0 }", index=0)
	public void postIncomeSummary( def evt ) { 
		def dc = evt.args[0];
		dc.items.each {
			def p = [:]
			p.refid = it.parentid
			p.refdate = dc.refdate
			def rv = revItemSvc.findAccount( it.item )	
			p.acctid = rv.objid
			p.fundid = rv.fund.objid 
			p.amount = it.amount
			p.refno = dc.refno
			p.reftype = dc.type.objid;
			p.orgid = env.ORGID 
			incSumEm.create(p)
		}
	}
	*/	

}

