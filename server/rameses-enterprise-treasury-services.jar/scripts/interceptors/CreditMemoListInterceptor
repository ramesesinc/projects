import com.rameses.annotations.*;

class CreditMemoListInterceptor {

	@After(pattern="QueryService.getNodeList", eval="#{ args[0]._schemaname == 'creditmemo' }")
	public void getNodes( evt ) { 
		def x = evt.args[0];
		def result = evt.result; 
		result << [ id:'open', title: 'Open', state:'OPEN' ];
		result << [ id:'posted-no-receipt', title: 'Posted To Income', state:'CLOSED' ];	
		result << [ id:'posted-with-receipt', title: 'Receipt Issued', state:'CLOSED' ];	
	}

	@Before(pattern="QueryService.getList", eval="#{ args[0]._schemaname == 'creditmemo' }")
	public void loadList(def evt) {
		def o = evt.args[0];

		if( !o.node?.id ) return;

		def str = "state = :state ";
		def m = [state: o.node.state];

		if( o.node.id == 'posted-no-receipt' ) {
			str += ' AND issuereceipt = 0 '; 
		}
		else if (o.node.id == 'posted-with-receipt') {
			str += ' AND issuereceipt = 1 '; 
		}

		if( o.where ) {
			o.where[0] = str + " AND " + o.where[0];	
			o.where[1].putAll( m );
		}
		else {
			o.where = [str, m];
		}
	}	

}
