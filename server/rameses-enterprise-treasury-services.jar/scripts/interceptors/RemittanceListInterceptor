import com.rameses.annotations.*;

class RemittanceListInterceptor {


	@After(pattern="QueryService.getNodeList", eval="#{ args[0]._schemaname == 'remittance' }")
	public void getNodes( evt ) { 
		def x = evt.args[0];
		def result = evt.result; 
		result << [ id:'draft', title: 'Draft', state:'DRAFT' ];
		result << [ id:'approval', title: 'For Approval', state:'OPEN' ];
		result << [ id:'approved', title: 'For Liquidation', state:'APPROVED' ];
		result << [ id:'closed', title: 'Liquidated', state:'CLOSED' ];
		result << [ id:'hold', title: 'On Hold', state:'HOLD' ];		
	}

	@Before(pattern="QueryService.getList", eval="#{ args[0]._schemaname == 'remittance' }")
	public void loadList(def evt) {
		def o = evt.args[0];

		//o.debug = true;
		if( !o.node?.id ) return;

		def str = " state = :state ";
		def m = [ state: o.node.state ]; 

		if ( o.node.state.toString().equalsIgnoreCase('APPROVED')) {
			str = ' liquidationid IS NULL AND '+ str; 
		} 

		if( o.where ) {
			o.where[0] = str + " AND " + o.where[0];	
			o.where[1].putAll( m );
		}
		else {
			o.where = [str, m];
		}		
	}	

}
