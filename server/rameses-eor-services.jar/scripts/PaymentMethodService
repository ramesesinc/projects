import com.rameses.annotations.*;
import com.rameses.util.*;
import com.rameses.common.*

class PaymentMethodService {

	@Service('CacheService') 
	def cacheSvc;

	@Service 
	def self;

	@Env 
	def env;

	@DataContext('payment_partner')
	def em;

	@ProxyMethod
	public def getPaymentMethods( params ) {
		if ( !params.billid ) throw new Exception('billid parameter is required.')
		
		env.bill = cacheSvc.get([ key: params.billid ]);  
		def result = [];
		result << [ objid: 'CASHIER', caption:'Pay To Cashier', info:[:] ];  
		result.addAll( em.where('1=1').list());
		result.each{ self.loadPartner( it ) }
		return result; 
	} 

	@ProxyMethod 
	public def loadPartner( def o ) { 
		return o; 
	}
}
