import com.rameses.annotations.*;
import com.rameses.util.*;
import com.rameses.common.*

class PaymentMethodInterceptor  {

	@Env 
	def env;     

	def formatter = new java.text.DecimalFormat('0.00');
	
	@After(pattern="PaymentMethodService.loadPartner", eval="#{args[0].objid.equalsIgnoreCase('DBP')}")
	public void loadDBPPartner( evt ) {
		def bill = env.bill;
		def partner = evt.args[0]; 

		def params = [:];
		params.terminalID = partner.info.terminalid;
		params.referenceCode = bill.txnid; 
		params.amount = formatter.format( bill.amount ); 
		params.serviceType = bill.particulars; 

		def secval = partner.info.terminalid + bill.txnid + '{' + partner.info.transactionkey + '}'; 
		params.securityToken = com.rameses.util.Encoder.SHA1.encode(secval);
		partner.params = params; 
	}


	@After(pattern="PaymentMethodService.loadPartner", eval="#{args[0].objid.equalsIgnoreCase('LBP')}")
	public void loadLandbankPartner( evt ) {
		def bill = env.bill;
		def partner = evt.args[0]; 

		def samt = formatter.format( bill.amount );

		def params = [:];
		params.MerchantCode = partner.info.merchantcode; 
		params.MerchantRefNo = bill.controlno; 
		params.Particulars = "Transaction_type=${bill.txntypename};Name=${bill.paidby};Tax Reference Number=${bill.txnid};"; 
		params.Amount = samt;
		params.PayorName = bill.paidby;
		params.PayorEmail = ( bill.paidbyemail ? bill.paidbyemail : '');
		params.ReturnURLOK = partner.info.successurl; 
		params.ReturnURLError = partner.info.errorurl;

		def secval = partner.info.merchantcode + bill.controlno + samt.replace('.','');
    	params.Hash = com.rameses.util.Encoder.MD5.encode(secval).toLowerCase();
	}

}
