import com.rameses.annotations.*
import com.rameses.common.*
import java.rmi.server.UID
import java.text.SimpleDateFormat;
import com.rameses.services.extended.*;

class ChangeInfoService  {	

	@Service("PersistenceService")
	def persistenceService;

	@Service("DateService")
	def dateSvc;

	@Service("SequenceService")
	def seqSvc;

	@Env
	def env;

	@ProxyMethod
	public def save( def o ) { 
		if ( !o._schemaname ) throw new Exception("ChangeInfoService error. Please include _schemaname");
		if ( !o.data ) throw new Exception("ChangeInfoService error. Please include data");
		if ( !o.reftype ) throw new Exception("ChangeInfoService error. Please include reftype");
		if ( !o.refkeys ) throw new Exception("ChangeInfoService error. Please include refkeys");
		if ( !o.remarks ) throw new Exception("ChangeInfoService error. Please include remarks");

		//update the target schema first. 
		def m = [:];
		if(o.debug) m.debug = true;
		m._schemaname = o.reftype;
		m.findBy = o.refkeys;
		m.putAll( o.data ); 
		m._tag = 'changeinfo';
		persistenceService.update( m );

		def ids = null;
		o.refkeys.each { k,v->
			ids = v;
		}

		//save the change info
		def dtfiled = dateSvc.getServerDate();
		def df = new java.text.SimpleDateFormat("yyyyMM");
		def yrmon = df.format( dtfiled );

		def n = [:];
		if(o.debug) n.debug = true;
		n._schemaname = o._schemaname;
		if( !n._schemaname) n._schemaname = "changeinfo";

		n.controlno = "CI-" + yrmon +  seqSvc.getNextFormattedSeriesA( "CHANGEINFO" + yrmon, 10 );
		n.action = o.action;
		n.keyfield = o.keyfield;
		n.oldvalue = o.oldvalue;
		n.newvalue = o.newvalue;
		n.remarks = o.remarks;
		n.dtfiled = dtfiled;
		n.refid = ids;
		n.reftype = o.reftype;
		n.filedby = [objid:env.USERID, name:env.FULLNAME];
		persistenceService.create( n ); 
	}

	@ProxyMethod
	public def execute( def o ) { 
		persistenceService.update( o );
	}

}