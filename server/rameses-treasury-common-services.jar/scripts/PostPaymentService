import com.rameses.annotations.*;

class PostPaymentService {
	
	@DataContext(dynamic=true)
	def em;

	@ProxyMethod 
	public void post( def pmt ) {
		def emMap = [:];
		def emLookup = { name ->
			if( !emMap.containsKey(name)) {
				emMap.put( name, em.lookup( name));
			}
			return emMap.get(name);
		}
		pmt.voided = 0;
		def pmtEm = emLookup( pmt._schemaname );
		pmtEm.create( pmt );

		//after create post the posting references
		pmt.items.each {
			def gb = emLookup( it.reftype );

			//if there is a _new marker, then create this before saving
			if(it._new == true ) {
				gb.create( it );	
			}
			else {
				//find first if it exists then save 
				gb.find( [objid: it.refid] ).update( [amount: "{amtpaid + :amt}"], [amt: it.amount] );
			}			
		}
	}


}