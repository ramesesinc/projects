import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;
import java.text.*;

public class OnlineBusinessBillingService  {

	@Service("BusinessCashReceiptService")
	def svc;

	@Service("DateService")
	def dateSvc;

	@Service("PaymentOrderService")
	def pmoSvc;	

	@DataContext("collectiontype")
	def collectionType;	

	@Service("NumberService")
	def numSvc;

	private def getPaymentOption(def o) {
		def r = [:] 
        	if ( o.payoption == null || o.payoption.equalsIgnoreCase('FULLYEAR') ) {
			r.option = 'FULLYEAR';
        	}
        	else if ( o.payoption.equalsIgnoreCase('SPECIFY-AMOUNT')) {
        		r.option = 'SPECIFY-AMOUNT'; 
        		r.amount = o.payamount;
        		if ( o.payamount instanceof Number ) {
        			//do nothing 
        		} else { 
        			r.amount = new java.math.BigDecimal( o.payamount ); 
        		} 
        	} 
        	else {
			r.option = 'FULLQTR';
			if( o.payoption.equalsIgnoreCase( "q1") ) r.qtr = 1;
			else if( o.payoption.equalsIgnoreCase( "q2") ) r.qtr = 2;
			else if( o.payoption.equalsIgnoreCase( "q3") ) r.qtr = 3;
			else r.qtr = 4;
        	}
        	return r;
	}

	private def generateBilling( def o ) {
		def b = svc.findInfo([appno: o.appno]);
		if(!b) {
			throw new Exception("Cannot find business application no " + o.appno);
		}	

		def r = [:];
        	r.app = [apptype:b.apptype, appyear:b.appyear, dtfiled:b.dtfiled, appno:b.appno]; 
        	r.billdate = dateSvc.getBasicServerDate();
        	r.applicationid = b.applicationid;
        	r.payment = getPaymentOption(o);
		def z = svc.getBillingForPayment( r ); 
		b.putAll(z);
        	b.amount = b.totals.total;
        	b.payoption = r.payment;
		return b;
	}

	@ProxyMethod
	public def getBilling( def o ) { 
		def z = generateBilling(o); 
		z.objid = z.applicationid;
		z.particulars = 'Business Collection';
		z.controlno = numSvc.generateControlNo();
		z.txntype = 'bpcol';
		z.txntypename = 'Business Permit'; 
		z.txnid = KeyGen.generateAlphanumKey( "PMO:", 6 );
		z.refid = z.objid;
		z.refno = z.appno;
		z.info = [payoption: z.payoption];
		return z;
	}

	@ProxyMethod
	public def createPaymentOrder( def o ) {
		def z = getBilling(o);
		def m =[:]
		m.txnid = KeyGen.generateAlphanumKey( "PMO:", 10 );
		m.txndate = dateSvc.getServerDate();

		def cal = Calendar.instance;
		cal.setTime(  m.txndate );
		cal.add( Calendar.HOUR, 3 );
		m.expirydate = new java.sql.Timestamp( cal.getTimeInMillis());

		m.payer = z.payer;
		m.paidby = z.paidby;
		m.paidbyaddress = z.paidbyaddress;
		m.txntypename = 'Business Permit';
		m.particulars = z.particulars;
		m.collectiontype = collectionType.select("objid").find( [handler: 'bpls' ] ).first();
		m.amount = z.amount;
		m.items = z.items.collect{ [ item: it.item, amount:it.amount, remarks:it.remarks ] };
		m.refid = z.refid;
		m.refno = z.refno;
		m.info = z.info;
		return m;
		//return pmoSvc.create(m);
	} 
}