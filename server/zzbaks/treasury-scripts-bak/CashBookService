import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;
import com.rameses.common.*
import com.rameses.services.extended.*

class CashBookService extends ActiveCrudListService {

	@ActiveDB("cashbook")
	def em;

	@Env 
	def env; 

	@ProxyMethod
	public def getColumns(def m) {
		return [
			[name:"state", caption:"State", width:"80"],
			[name:"code", caption:"Sub Account Code", width:"100"],
			[name:"title", caption:"Account Title", width:"300"],
			[name:"fund.code", caption:"Fund Name", width:"60"],
			[name:"fund.title", caption:"Fund Title", width:"60"],
			[name:"totaldr", caption:"Total Dr", width:"150", type:"decimal"],
			[name:"totalcr", caption:"Total Cr", width:"150", type:"decimal"],
			[name:"endbalance", caption:"End Balance", width:"150", type:"decimal"],
		];
	}

	void beforeList ( params ) {
		params.searchtext = (params.searchtext ? params.searchtext : '') + '%'; 
		if ( params.admin == true ) {
			params._listMethod = 'getList'; 
		} else { 
			params._listMethod = 'getListBySubacct'; 
			params.subacctid = env.USERID; 
		} 
	} 
	
	public void beforeCreate( def o ) {
		o.beginbalance = 0;
		o.forwardbalance = 0;
		o.totaldr = 0;
		o.totalcr = 0;
		o.endbalance = 0;
		o.currentlineno = 1;
	}

	@ProxyMethod
	public def getEntries( o ) {
		return em.getEntries(o);
	}
	

	@ProxyMethod 
	public def saveBatch( o ) {
		o.funds.each {
			o.objid = "CSB" + new UID() 
			o.state = "APPROVED" 
			o.code = o.prefix + " - " + it.title 
			o.title = o.subacct.name + " - " + it.title;
			o.fund = it   
			beforeCreate(o)
			em.save( o );
		}
	}
	
	@ProxyMethod 
	public def findBySubAcctFund( params ) {
		return em.findBySubAcctFund( params ); 
	} 		
}
